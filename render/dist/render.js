/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./date-format.js":
/*!************************!*\
  !*** ./date-format.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Date Format\n * Copyright (c) 2011, marlun78\n * MIT License, https://gist.github.com/marlun78/bd0800cf5e8053ba9f83\n *\n * Format options inspired by the .NET framework's format.\n * http://msdn.microsoft.com/en-us/library/8kb3ddd4.aspx\n *\n * Non-formatting characters within the format string must be\n * quoted (single (') or double (\") quotes)! The same is true\n * for two format specifiers that should apear together. Eg.\n * if you want the date to be output with the date ordinal\n * (9th), the format string must be \"d''x\" (or 'd\"\"x').\n *\n * Arguments:\n *     format   {String} The format pattern to display the date in. See Format Patterns section below for options.\n *     settings {Object} Formatting settings.\n *\n * Settings:\n *     asUtc      {Boolean} If the formatted date is to be returned as a UTC date.\n *     days       {Array}   The days of the week. Starting with Sunday.\n *     daysAbbr   {Array}   The days of the week, abbreviated. Starting with Sunday.\n *     designator {Array}   Time designator. Starting with AM.\n *     format     {String}  The format pattern to format the date in.\n *     months     {Array}   The name of the months. Starting with January.\n *     monthsAbbr {Array}   The name of the months, abbreviated. Starting with January.\n *\n * Format Patterns:\n *      d       1-31                The day of the month\n *      dd      01-31               The day of the month\n *      ddd     Mon-Sun             The abbreviated name of the day of the week\n *      dddd    Monday-Sunday       The full name of the day of the week\n *      f       6                   The tenths of a second in a date and time value. The remaining digits are truncated.\n *      ff      61                  The hundredths of a second in a date and time value. The remaining digits are truncated.\n *      fff     617                 The milliseconds in a date and time value. The remaining digits are truncated.\n *      ffff    6170                The milliseconds in a date and time value, with a trailing zero. The remaining digits are truncated.\n *      fffff   61700               The milliseconds in a date and time value, with two trailing zeros. The remaining digits are truncated.\n *      ffffff  617000              The milliseconds in a date and time value, with three trailing zeros. The remaining digits are truncated.\n *      F       6                   The tenths of a second in a date and time value. Trailing zeros or zero values are not displayed.\n *      FF      61                  The hundredths of a second in a date and time value. Trailing zeros or zero values are not displayed.\n *      FFF     617                 The milliseconds in a date and time value. Trailing zeros or zero values are not displayed.\n *      FFFF    617                 The milliseconds in a date and time value. Trailing zeros or zero values are not displayed.\n *      FFFFF   617                 The milliseconds in a date and time value. Trailing zeros or zero values are not displayed.\n *      FFFFFF  617                 The milliseconds in a date and time value. Trailing zeros or zero values are not displayed.\n *      h       1-12                The hour, using a 12-hour clock\n *      hh      01-12               The hour, using a 12-hour clock\n *      H       0-23                The hour, using a 24-hour clock\n *      HH      00-23               The hour, using a 24-hour clock\n *      m       0-59                The minute\n *      mm      00-59               The minute\n *      M       1-12                The month\n *      MM      01-12               The month\n *      MMM     Jan-Dec             The abbreviated name of the month\n *      MMMM    January-December    The full name of the month\n *      s       0-59                The second\n *      ss      00-59               The second\n *      tt      AM/PM               The AM/PM designator\n *      x       st, nd, rd, th      The ordinal suffix of a number (NOTE! This does not exist in .NET!)\n *      y       0-99                The year\n *      yy      00-99               The year\n *      yyy     001-9999            The year, with a minimum of three digits\n *      yyyy    0001-9999           The year as a four-digit number\n *      z       +1                  Hours offset from UTC, with no leading zeros.\n *      zz      +01                 Hours offset from UTC, with a leading zero for a single-digit value.\n *      zzz     +01:00              Hours and minutes offset from UTC.\n *\n * Example:\n *     The formatting method can be called in the following three ways:\n *     formatDate(format, settings) {String} The format string passed is used, any settings are stored.\n *                                           If the settings object contain a format property, it will override the format string.\n *     formatDate(settings)         {String} Settings are stored and the stored format is used.\n *     formatDate()                 {String} Default settings are used.\n */\n(function () {\n\n    'use strict';\n\n    var asUtc = false,\n        days = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday'.split(' '),\n        daysAbbr = 'Sun Mon Tue Wed Thu Fri Sat'.split(' '),\n        designators = 'AM PM'.split(' '),\n        defaultFormat = 'MMMM d\"\"x \"at\" h:mm tt',\n        months = 'January February March April May June July August September October November December'.split(' '),\n        monthsAbbr = 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' '),\n\n        // The formatting function\n        formatDate =(function(){\n            var findPatterns = /(d+|f+|F+|h+|m+|H+|M+|s+|t+|x+|y+|z+)/g,\n                getMethod = function (method) {\n                    return 'get' + (asUtc ? 'UTC' : '') + method;\n                },\n                handlers = {\n                         d: function () { return this[getMethod('Date')](); },\n                        dd: function () { return pad(this[getMethod('Date')]()); },\n                       ddd: function () { return getDayName.call(this, true); },\n                      dddd: function () { return getDayName.call(this); },\n                         f: function () { return pad(pad(this[getMethod('Milliseconds')](), 3), 6, true).substr(0, 1); },\n                        ff: function () { return pad(pad(this[getMethod('Milliseconds')](), 3), 6, true).substr(0, 2); },\n                       fff: function () { return pad(pad(this[getMethod('Milliseconds')](), 3), 6, true).substr(0, 3); },\n                      ffff: function () { return pad(pad(this[getMethod('Milliseconds')](), 3), 6, true).substr(0, 4); },\n                     fffff: function () { return pad(pad(this[getMethod('Milliseconds')](), 3), 6, true).substr(0, 5); },\n                    ffffff: function () { return pad(pad(this[getMethod('Milliseconds')](), 3), 6, true).substr(0, 6); },\n                         F: function () { var r = pad(this[getMethod('Milliseconds')](), 3).substr(0, 1); return r === '0' ? '' : r; },\n                        FF: function () { var r = pad(this[getMethod('Milliseconds')](), 3).substr(0, 2); return r === '00' ? '' : r; },\n                       FFF: function () { return pad(this[getMethod('Milliseconds')](), 3).substr(0, 3); },\n                      FFFF: function () { return handlers.FFF.call(this); },\n                     FFFFF: function () { return handlers.FFF.call(this); },\n                    FFFFFF: function () { return handlers.FFF.call(this); },\n                         h: function () { var h = this[getMethod('Hours')](); return h > 12 ? h - 12 : h; },\n                        hh: function () { var h = this[getMethod('Hours')](); return pad(h > 12 ? h - 12 : h); },\n                         m: function () { return this[getMethod('Minutes')](); },\n                        mm: function () { return pad(this[getMethod('Minutes')]()); },\n                         H: function () { return this[getMethod('Hours')](); },\n                        HH: function () { return pad(this[getMethod('Hours')]()); },\n                         M: function () { return this[getMethod('Month')]() + 1; },\n                        MM: function () { return pad(this[getMethod('Month')]() + 1); },\n                       MMM: function () { return getMonthName.call(this, true); },\n                      MMMM: function () { return getMonthName.call(this); },\n                         s: function () { return this[getMethod('Seconds')](); },\n                        ss: function () { return pad(this[getMethod('Seconds')]()); },\n                        tt: function () { return getDesignator.call(this); },\n                         x: function () { return getOrdinal.call(this); },\n                         y: function () { var y = this[getMethod('FullYear')](), s = y.toString(); return y < 10 ? y : s.substr(s.length - 2); },\n                        yy: function () { return pad(this[getMethod('FullYear')](), 2); },\n                       yyy: function () { var y = this[getMethod('FullYear')](), s = y.toString(); return y < 1000 ? pad(y, 3) : s.substr(s.length - 4); },\n                      yyyy: function () { return pad(this[getMethod('FullYear')](), 4); },\n                     yyyyy: function () { return pad(this[getMethod('FullYear')](), 5); },\n                    yyyyyy: function () { return pad(this[getMethod('FullYear')](), 6); },\n                         z: function () { var t = this.getTimezoneOffset(); return (t > 0 ? '-' : '+') + Math.abs(t / 60); },\n                        zz: function () { var t = this.getTimezoneOffset(); return (t > 0 ? '-' : '+') + pad(Math.abs(t / 60)); },\n                       zzz: function () { var t = this.getTimezoneOffset(); return (t > 0 ? '-' : '+') + pad(Math.abs(t / 60)) + ':' + pad((Math.abs(t / 60) % 1) * 60); }\n                };\n\n            return function () {\n                var self = this, format, settings;\n                // Evaluate arguments\n                if (typeof arguments[0] === 'string') {\n                    format = arguments[0];\n                    settings = arguments[1];\n                }\n                else {\n                    format = null;\n                    settings = arguments[0];\n                }\n                // Store any passed settings\n                if (settings) {\n                    if (typeof settings.asUtc !== 'undefined') asUtc = settings.asUtc;\n                    if (settings.days) days = settings.days;\n                    if (settings.daysAbbr) daysAbbr = settings.daysAbbr;\n                    if (settings.designator) designators = settings.designator;\n                    if (settings.format) defaultFormat = settings.format;\n                    if (settings.getDateOrdinal) getOrdinal = settings.getDateOrdinal;\n                    if (settings.months) months = settings.months;\n                    if (settings.monthsAbbr) monthsAbbr = settings.monthsAbbr;\n                }\n                if (!format) {\n                    format = defaultFormat;\n                }\n                return format.replace(findPatterns, function (match, group1) {\n                    var fn = handlers[group1];\n                    return typeof fn === 'function' ? fn.call(self) : match;\n                }).replace(/[\"']/g, '');\n            };\n        }()),\n\n\n        getDayName = function (asAbbr) {\n            var n = this.getDay();\n            return asAbbr ? daysAbbr[n] : days[n];\n        },\n\n        getMonthName = function (asAbbr) {\n            var n = this.getMonth();\n            return asAbbr ? monthsAbbr[n] : months[n];\n        },\n\n        getOrdinal = (function () {\n            var os = 'th st nd rd th'.split(' ');\n            return function () {\n                var d = this.getDate();\n                return (d > 3 && d < 21) ? os[0] : os[Math.min(d % 10, 4)];\n            };\n        }()),\n\n        getDesignator = function () {\n            return this.getHours() >= 12 ? designators[1] : designators[0];\n        },\n\n        pad = (function () {\n            var p = '000000';\n            return function (obj, len, fromRight) {\n                return fromRight ?\n                    (obj + p).slice(0, len ? Math.min(len, p.length) : 2) :\n                    (p + obj).slice(-(len ? Math.min(len, p.length) : 2));\n            };\n        }());\n\n    // Expose the formatting method\n    // As a global function\n    //window.formatDate = function (date, format, options) {\n    //    if(isNaN(+date) || !date.getDate) throw new Error('Not a valid date');\n    //    return formatDate.call(date, format, options);\n    //};\n    // Or as a method on the Date object\n    Date.prototype.format = function (format, options) {\n        return formatDate.call(this, format, options);\n    };\n\n}());\n\n//# sourceURL=webpack:///./date-format.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./date-format.js */ \"./date-format.js\");\n__webpack_require__(/*! ./mintmap.js */ \"./mintmap.js\");\n__webpack_require__(/*! ./mintmap-ui-utils.js */ \"./mintmap-ui-utils.js\");\n\n__webpack_require__(/*! ./mapbox-utils.js */ \"./mapbox-utils.js\");\n__webpack_require__(/*! ./mapbox-layer-utils.js */ \"./mapbox-layer-utils.js\");\nvar coordinatesGeocoder = __webpack_require__(/*! ./mapbox-geocoder.js */ \"./mapbox-geocoder.js\")\nvar mapboxOnload = __webpack_require__(/*! ./mapbox-onload.js */ \"./mapbox-onload.js\");\nvar {variableHandler1, variableHandler2} = __webpack_require__(/*! ./mintmap-variable.js */ \"./mintmap-variable.js\");\n\nwindow.loadMapLayers = function(mapboxgl){\n\n    const variableArrayObserver = new Proxy(window._mintMap.variableArray, variableHandler1);\n    const mintMapObserver = new Proxy(window._mintMap, variableHandler2);\n    // window.__defaultLayerName = 'Landuse';\n    // window.__defaultLayerMD5 = '';\n    mapboxgl.accessToken = 'pk.eyJ1IjoibGlib2xpdSIsImEiOiJjamZ1cXc1cGIwNHlhMnhsYWx0amRrbmdrIn0.d2s82GJZj56n2QUN2WGNsA';\n\n    // liboliu.716mmt4v\n    var _mintMapShadowRoot = window._polymerMap.mint_map_element;\n    \n    var map = new mapboxgl.Map({\n        container: _mintMapShadowRoot.querySelector('#map'), // container id\n        style: 'mapbox://styles/mapbox/streets-v9', // stylesheet location\n        // center: [29.7,7.9], // starting position [lng, lat]\n        center: [26.3,7.6],\n        zoom: 5, // starting zoom\n    });\n    window._mintMap.map = map;\n    window._mintMap.map.resize();\n    setTimeout(function () {\n        window._mintMap.map.resize();\n    }, 1000);\n\n    window._isMapLoaded = true;\n    window._mintMap.onVariablesChanged = function (variables) {\n        if (!Array.isArray(variables)) {\n            console.log(\"Variables should be an array\")\n            return false;\n        }\n        if (variables.length === 0) {\n            console.log(\"Variables is empty\")\n            return false;\n        }\n        let isValid = true;\n        variables.forEach(function ( ele, idx) {\n            if (typeof ele !== \"object\") {\n                isValid = false; \n            }else{\n                if (!('md5' in ele)) {\n                    isValid = false;            \n                }\n            }\n        });\n        if (!isValid) {\n            console.log(\"Items in variables should be an object with format like {name: 'landuse', stdname: 'landuse-standard-name', md5: 'the-md5-hash-from-data-catalog', uri: 'the-uri-from-data-catalog'}\")\n            return false;\n        }\n        window._mintMap.variableArrayCount = variables.length;\n        variableArrayObserver.splice(0, variableArrayObserver.length);\n        variables.forEach(function (ele, idx) {\n            variableArrayObserver.push(ele);\n        });\n\n        // window.__defaultLayerMD5 = variables[0].md5;\n        // console.log(\"variables\",variables);\n    }\n    if (typeof window._mintMapOnloadVars === 'object') {\n        window._mintMap.onVariablesChanged(window._mintMapOnloadVars);\n    }\n\n    var geocoder = new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken,\n        localGeocoder: coordinatesGeocoder,\n        zoom: 10,\n        bbox: [22.9,3.3,36.5,12.5],\n        placeholder: \"Try: 29.7, 7.9\"\n    });\n\n    window._mintMap.map.on('load', mapboxOnload);\n\n    _mintMapShadowRoot.addEventListener(\"click\", function (e) {\n        e.stopPropagation();\n        if (e.target.classList.contains('tag_close')) {\n            if (!e.target.classList.contains('tag_add')) {\n                e.target.parentElement.parentElement.remove();\n                // TODO remove the layer\n                var tag = e.target.parentElement;\n                removeLayerFromMap(tag.getAttribute('data-source-layer'), tag.getAttribute('data-has-timeline') == \"true\" ? true : false);\n                updateListOfLayersNotAdded({\n                    layerName:tag.text, \n                    layerId: tag.getAttribute('data-layer-id'), \n                    hasData: tag.getAttribute('data-has-data') == \"true\" ? true : false, \n                    sourceLayer:tag.getAttribute('data-source-layer'), \n                    file:tag.getAttribute('data-file'),\n                    hasTimeline: tag.getAttribute('data-has-timeline') == \"true\" ? true : false\n                },false)\n                updateShowAllDiv(false);\n            }else{\n                // console.log(e.target);\n\n                var tag = e.target.parentElement;\n                // var newLayer = document.createElement('li');\n                // newLayer.innerHTML = \"<a href='#' class='\"+ tag.className +\"' data-layer-id='\"+ tag.getAttribute('data-layer-id')+\"' data-has-data='\" + tag.getAttribute('data-has-data') + \"' data-source-layer='\" + tag.getAttribute('data-source-layer') + \"' data-file='\"+ tag.getAttribute('data-file') +\"'>\" + tag.text + \"<div class='tag_close'></div></a>\";\n                \n                // var tagul = _mintMapShadowRoot.getElementById('the-ul-of-layer-list');\n                // var tagSearch = _mintMapShadowRoot.getElementById('the-li-of-add-new-layer');\n                // tagul.insertBefore(newLayer, tagSearch);\n\n                var hasLayer = addNewLayerToMap(\n                    tag.getAttribute('data-has-data') === \"true\" ? true : false, \n                    tag.getAttribute('data-layer-id'), \n                    tag.text, \n                    tag.getAttribute('data-source-layer'), \n                    tag.getAttribute('data-file'),\n                    tag.getAttribute('data-has-timeline') === \"true\" ? true : false\n                    );\n                if (!hasLayer) {\n                    return false;\n                }\n                e.target.parentElement.parentElement.remove();\n                // TODO add the layer\n                // remove from window. list of \n                updateListOfLayersNotAdded({layerName:tag.text},true);\n                updateShowAllDiv(false);\n            }\n            \n        }\n        if (e.target.id == 'show-all-layers') {\n            var sal = _mintMapShadowRoot.querySelector('#show-all-layers');\n            var showDiv = _mintMapShadowRoot.querySelector('#show-all-div');\n            if(showDiv){\n                showDiv.remove();\n                sal.innerHTML = \"Show All Layers\";\n                sal.setAttribute('data-show',\"no\");\n            }else{\n                updateShowAllDiv();\n                sal.innerHTML = \"Hide All Layers\";\n                sal.setAttribute('data-show',\"yes\");\n            }\n        }\n        \n    });\n\n    window._mintMap.map.on('mousemove', function (e) {\n        // console.log(e);\n            // e.point is the x, y coordinates of the mousemove event relative\n            // to the top-left corner of the map\n            // JSON.stringify(e.point) + '<br />' +\n            // e.lngLat is the longitude, latitude geographical position of the event\n            // JSON.stringify(e.lngLat));\n    });\n\n}\n\n!function forceLoading() {\n    if (window.mapboxgl && !window._isMapLoaded) {\n        window.loadMapLayers(window.mapboxgl);\n    }else{\n        setTimeout(function() {\n            if (!window._isMapLoaded) {\n                forceLoading();\n            }\n        }, 1000);\n    }\n}();\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./mapbox-geocoder.js":
/*!****************************!*\
  !*** ./mapbox-geocoder.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* given a query in the form \"lng, lat\" or \"lat, lng\" returns the matching\n * geographic coordinate(s) as search results in carmen geojson format,\n * https://github.com/mapbox/carmen/blob/master/carmen-geojson.md\n */\nvar coordinatesGeocoder = function (query) {\n    // match anything which looks like a decimal degrees coordinate pair\n    var matches = query.match(/^[ ]*(?:Lat: )?(-?\\d+\\.?\\d*)[, ]+(?:Lng: )?(-?\\d+\\.?\\d*)[ ]*$/i);\n    if (!matches) {\n        return null;\n    }\n\n    function coordinateFeature(lng, lat) {\n        return {\n            center: [lng, lat],\n            geometry: {\n                type: \"Point\",\n                coordinates: [lng, lat]\n            },\n            place_name: 'Lat: ' + lat + ', Lng: ' + lng, // eslint-disable-line camelcase\n            place_type: ['coordinate'], // eslint-disable-line camelcase\n            properties: {},\n            type: 'Feature'\n        };\n    }\n\n    var coord1 = Number(matches[1]);\n    var coord2 = Number(matches[2]);\n    var geocodes = [];\n\n    if (coord1 < -90 || coord1 > 90) {\n        // must be lng, lat\n        geocodes.push(coordinateFeature(coord1, coord2));\n    }\n\n    if (coord2 < -90 || coord2 > 90) {\n        // must be lat, lng\n        geocodes.push(coordinateFeature(coord2, coord1));\n    }\n\n    if (geocodes.length === 0) {\n        // else could be either lng, lat or lat, lng\n        geocodes.push(coordinateFeature(coord1, coord2));\n        geocodes.push(coordinateFeature(coord2, coord1));\n    }\n\n    return geocodes;\n};\nmodule.exports = coordinatesGeocoder;\n\n//# sourceURL=webpack:///./mapbox-geocoder.js?");

/***/ }),

/***/ "./mapbox-inspect.js":
/*!***************************!*\
  !*** ./mapbox-inspect.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var mapboxInspectToolkit = {\n    displayValue : function (value) {\n      if (typeof value === 'undefined' || value === null) return value;\n      if (value instanceof Date) return value.toLocaleString();\n      if (typeof value === 'object' ||\n              typeof value === 'number' ||\n              typeof value === 'string') return value.toString();\n      return value;\n    },\n    \n    getMode: function (array) {\n        if(array.length == 0)\n            return null;\n        var modeMap = {};\n        var maxEl = array[0], maxCount = 1;\n        for(var i = 0; i < array.length; i++)\n        {\n            var el = array[i];\n            if(modeMap[el] == null)\n                modeMap[el] = 1;\n            else\n                modeMap[el]++;  \n            if(modeMap[el] > maxCount)\n            {\n                maxEl = el;\n                maxCount = modeMap[el];\n            }\n        }\n        return maxEl;\n    },\n    renderProperty : function(propertyName, property) {\n      return '<div class=\"mapbox-gl-inspect_property\">' +\n        '<div class=\"mapbox-gl-inspect_property-name\">' + propertyName + '</div>' +\n        '<div class=\"mapbox-gl-inspect_property-value\">' + this.displayValue(property) + '</div>' +\n        '</div>';\n    },\n\n    renderLayer : function(layerId) {\n      return '<div class=\"mapbox-gl-inspect_layer\">' + layerId + '</div>';\n    },\n\n    renderProperties : function(getModeForEachLayer) {\n        var self = this;\n        // var layer = feature.layer['source-layer'] || feature.layer.source;\n        // var sourceProperty = self.renderLayer(layer);\n        // var typeProperty = '';//self.renderProperty('$type', feature.geometry.type);\n        var layersElements = [];\n        Object.keys(getModeForEachLayer).map(function (layerName) {\n            var layerElement= self.renderLayer(layerName);\n            var oneLayerElement = [];\n            Object.keys(getModeForEachLayer[layerName]).map(function (propertyName) {\n                var modeValue = self.getMode(getModeForEachLayer[layerName][propertyName]);\n                if (modeValue!=null) {\n                     oneLayerElement.push(layerElement + self.renderProperty(propertyName, modeValue));\n                }\n            })\n            layersElements.push(oneLayerElement.join(''));\n        });\n        return layersElements.join('');\n        // return self.renderProperty(propertyName, feature.properties[propertyName]);\n        // return [sourceProperty, typeProperty].concat(properties).join('');\n    },\n    calcModeForLayers: function (feature, getModeForEachLayer) {\n        var self = this;\n        var layer = feature.layer['source-layer'] || feature.layer.source;\n        getModeForEachLayer[layer] = {};\n\n        Object.keys(feature.properties).map(function (propertyName) {\n            if (propertyName in getModeForEachLayer[layer]) {\n                getModeForEachLayer[layer][propertyName].push(feature.properties[propertyName]);\n            }else{\n                getModeForEachLayer[layer][propertyName] = [feature.properties[propertyName]];\n            }\n        });\n    },\n    renderFeatures : function(features) {\n        var self = this;\n        var getModeForEachLayer = {};\n\n        features.map(function (ft) {\n            self.calcModeForLayers(ft, getModeForEachLayer);\n        });\n        return '<div class=\"mapbox-gl-inspect_feature\">' + self.renderProperties(getModeForEachLayer) + '</div>';//.join('');\n    }\n};\n\nmodule.exports = mapboxInspectToolkit;\n\n//# sourceURL=webpack:///./mapbox-inspect.js?");

/***/ }),

/***/ "./mapbox-layer-utils.js":
/*!*******************************!*\
  !*** ./mapbox-layer-utils.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var md5 = __webpack_require__(/*! md5 */ \"./node_modules/md5/md5.js\");\nfunction addNewLayerToMap(hasData, layerId, layerName, sourceLayer, file, hasTimeline = false) {\n    if (!hasData) {\n        alert('The data source of this layer has not been added! Can not be shown on the window._mintMap.map.');\n        return false;\n    }\n    var newLayer = document.createElement('li');\n    newLayer.innerHTML = \"<a class='tag \" \n    + (hasData ? \"with-data-tag\":\"no-data-tag\") \n    + \"' data-layer-id='\"+layerId+\"' data-has-data='\" \n    + (hasData ? \"true\":\"false\") + \"' data-source-layer='\" \n    + sourceLayer + \"' data-file='\"+ file \n    + \"' data-has-timeline='\" + (hasTimeline ? \"true\":\"false\") + \"'>\" \n    + layerName + \"<div class='tag_close'></div></a>\";\n    var tagul = _mintMapShadowRoot.querySelector('#the-ul-of-layer-list');\n    var tagSearch = _mintMapShadowRoot.querySelector('#the-li-of-add-new-layer');\n    tagul.insertBefore(newLayer, tagSearch);\n    loadLayerFromJson({\n        id:layerId, \n        layerName:layerName,\n        'source-layer':sourceLayer,\n        file:file, \n        hasTimeline: hasTimeline\n    });\n\n    return true;\n\n}\nfunction removeLayerFromMap(sourceLayer, hasTimeline = false) {\n    var layerName = sourceLayer + \"Layer\";\n    if (window._mintMap.map.getLayer(layerName)) {\n        window._mintMap.map.removeLayer(layerName);\n        window._mintMap.map.removeLayer(layerName+\"_raster\");\n        removeLegend(sourceLayer);\n        removeInspectLayers(layerName);\n        updatePropertiesSettingBy(layerName);\n    }\n    if (window._mintMap.map.getLayer('boundsOfOriginalDatasets' + sourceLayer)) {\n        window._mintMap.map.removeLayer('boundsOfOriginalDatasets' + sourceLayer);\n    }\n    if (hasTimeline) {\n        // remove all layers except the first one\n        let timeLineData = window._mintMap.metadata.layers.filter(function (ele) {\n                return ele['source-layer'] === sourceLayer;\n            });\n        if (timeLineData.length === 0) {\n            return;\n        }\n        let timelineLayer = timeLineData[0];\n        let steps = timelineLayer.step;\n\n        for (var i = 1; i < steps.length; i++) {\n            let rasterLayer = layerName + \"_raster_\" + steps[i];\n            let vectorLayer = layerName + \"_vector_\" + steps[i];\n            if (window._mintMap.map.getLayer(rasterLayer)) {\n                window._mintMap.map.removeLayer(rasterLayer);\n            }\n            if (window._mintMap.map.getLayer(vectorLayer)) {\n                window._mintMap.map.removeLayer(vectorLayer);\n            }\n        }\n    }\n}\nfunction updateInspectLayers(curLayerName) {\n    if ('layers' in window._mintMap.mapInspect.options.queryParameters) {\n        if (window._mintMap.mapInspect.options.queryParameters['layers'].indexOf(curLayerName) == -1) {\n            window._mintMap.mapInspect.options.queryParameters['layers'].push(curLayerName);\n        }\n    }else{\n        window._mintMap.mapInspect.options.queryParameters['layers'] = [curLayerName]\n    }\n}\nfunction removeInspectLayers(curLayerName) {\n    if ('layers' in window._mintMap.mapInspect.options.queryParameters) {\n        var idx = window._mintMap.mapInspect.options.queryParameters['layers'].indexOf(curLayerName);\n        if (idx > -1) {\n            window._mintMap.mapInspect.options.queryParameters['layers'].splice(idx,1);\n        }\n    }\n}\nfunction getLastLayerId() {\n    var layers = window._mintMap.map.getStyle().layers;\n    return layers[layers.length - 1].id;\n}\nfunction loadLayerFromJson(obj) {\n    var curLayerName = obj['source-layer'] + \"Layer\";\n    let slpos = window._mintMap.metadata.sourceLayers.indexOf(obj['source-layer']);\n    if (slpos === -1) {\n        console.log(\"NO such data\");\n        return false;\n    }\n\n    if (!window._mintMap.metadata.hasData[slpos]) {\n        console.log(\"hasNoData\");\n        return false;\n    }\n    let lid = window._mintMap.metadata.layerIds[slpos];\n    let layer = window._mintMap.metadata.layers.filter(function (obj) {\n        return obj.id == lid;\n    });            \n    let tile_path = window._mintMap.metadata.tiles;\n    let server = window._mintMap.metadata.server;\n    if(\"server\" in window._mintMap.metadata.layers[0])\n        server = window._mintMap.metadata.layers[0].server;\n    var identifier = window._mintMap.metadata.layerIds.indexOf(obj.id);\n    let vectorMD5 = window._mintMap.metadata.vectorMD5[identifier];\n\n    if (!window._mintMap.map.getSource(window._mintMap.metadata.sourceLayers[identifier])) {\n        window._mintMap.map.addSource(window._mintMap.metadata.sourceLayers[identifier],{\n            type: 'vector',\n            tiles: [server + vectorMD5 + tile_path + '.pbf']\n        });\n    }\n\n    // Start raster layer\n    let rasterMD5 = window._mintMap.metadata.rasterMD5[identifier];\n    let rasterLayerId = obj.id.replace('vector_pbf','raster_png');\n    if (!window._mintMap.map.getSource(rasterLayerId)) {\n        window._mintMap.map.addSource(rasterLayerId, {\n            type: 'raster',\n            tiles: [server + rasterMD5 + tile_path + '.png'],\n            bounds: window._mintMap.bounds\n        });\n    }\n    \n    window._mintMap.map.addLayer({\n        \"id\":curLayerName + \"_raster\",\n        \"type\": 'raster',\n        'source': obj.id.replace('vector_pbf','raster_png'),\n        'layout': {\n            'visibility': 'visible',\n        },\n        'paint':{\n            'raster-opacity':0.8\n        },\n    });\n    window._mintMap.map.addLayer({\n        \"id\": curLayerName,\n        \"type\": \"fill\",\n        \"source\": obj['source-layer'],\n        \"source-layer\": obj['source-layer'],\n        \"layout\": {\n            'visibility': 'visible'\n        },\n        \"paint\": {\n            \"fill-opacity\": 0.0\n        }\n    });\n    if (obj.hasTimeline) {\n        loadTilesOfTimeline(server, tile_path, identifier, obj.id, obj['source-layer'], vectorMD5);\n    }\n    window._mintMap.displayed.push(vectorMD5);\n    updateInspectLayers(curLayerName);\n    updatePropertiesSettingBy(curLayerName, false);\n    updateListOfLayersNotAdded({layerName: obj.layerName, \n        layerId: obj.id, \n        hasData: true,\n        sourceLayer:obj['source-layer'], \n        file:\"ckan\",\n        hasTimeline: obj.hasTimeline\n    },true);\n    updateShowAllDiv(false);\n\n    fetch(\"http://jonsnow.usc.edu:8081/mintmap/meta/\" + obj.id + \".json?ver=\"+Math.random())\n    .then(response => response.json())\n    .then(json => {\n        // console.log(json);\n        window._mintMap.map.setPaintProperty(curLayerName, 'fill-color', JSON.parse(json.colormap));\n        // window._mintMap.map.setPaintProperty('landuseLayer', 'fill-color',styleExpression);\n        updateLegend(json['legend-type'],JSON.parse(json.legend), obj['source-layer']);\n        drawOriginalBound(JSON.parse(json.originalDatasetCoordinate), json['source-layer']);\n        // addPropertySetting Panel\n    }).catch(error => console.error(error));\n}\nfunction loadTilesOfTimeline(server, tile_path, identifier, layerId, sourceLayerId, vectorMD5) {\n    let vectorMD5Arr = vectorMD5.split('_');\n    if (vectorMD5Arr.length !== 2) {\n        console.log(\"VectorMD5 is not designed for timeline\");\n        return;\n    }\n    let vectorMD5Prefix = vectorMD5Arr[0] + \"_\";\n\n    let timeLineData = window._mintMap.metadata.layers.filter(function (ele) {\n                return ele.id === layerId;\n            });\n    if (timeLineData.length === 0) {\n        console.log(\"There is no such layer which id = \" + layerId);\n        return;\n    }\n    let timelineLayer = timeLineData[0];\n\n    // let timelines = window._mintMap.sliderData[sourceLayerId];\n    // \"axis\":\"slider\",\n    // \"stepType\":\"Time\",\n    // \"stepOption\":{\"type\":\"string\", \"format\":\"YYYY\"},\n    // \"step\":[\"2012\",\"2013\",\"2014\"]// \n    if (timelineLayer.step.length <= 1) {\n        console.log(\"There are only one time stamp in the Timeseries\");\n        return;\n    }\n\n    let curLayerName = sourceLayerId + \"Layer\";\n    \n    for (var i = 1; i < timelineLayer.step.length; i++) {\n        let vectorMD5_of_idx = vectorMD5Prefix + timelineLayer.step[i];\n        let rasterMD5_of_idx = md5(vectorMD5_of_idx);\n        let vectorSourceId_of_idx = sourceLayerId + \"vector_pbf\" + timelineLayer.step[i];\n        let rasterSourceId_of_idx = sourceLayerId + \"raster_png\" + timelineLayer.step[i];\n\n        if (!window._mintMap.map.getSource(vectorSourceId_of_idx)) {\n            window._mintMap.map.addSource(vectorSourceId_of_idx,{\n                type: 'vector',\n                tiles: [server + vectorMD5_of_idx + tile_path + '.pbf']\n            });\n        }\n\n        if (!window._mintMap.map.getSource(rasterSourceId_of_idx)) {\n            window._mintMap.map.addSource(rasterSourceId_of_idx, {\n                type: 'raster',\n                tiles: [server + rasterMD5_of_idx + tile_path + '.png'],\n                bounds: window._mintMap.bounds\n            });\n        }\n\n        let rasterLayerId_of_idx = curLayerName + \"_raster_\" + timelineLayer.step[i];\n        let vectorLayerId_of_idx = curLayerName + \"_vector_\" + timelineLayer.step[i];\n\n        if (!window._mintMap.map.getLayer(rasterLayerId_of_idx)) {\n            window._mintMap.map.addLayer({\n                \"id\": rasterLayerId_of_idx,\n                \"type\": 'raster',\n                'source': rasterSourceId_of_idx,\n                'layout': {\n                    'visibility': 'none',\n                },\n                'paint':{\n                    'raster-opacity':0.8\n                },\n            });\n        }\n        \n        if (!window._mintMap.map.getLayer(vectorLayerId_of_idx)) {\n            window._mintMap.map.addLayer({\n                \"id\": vectorLayerId_of_idx,\n                \"type\": \"fill\",\n                \"source\": vectorSourceId_of_idx,\n                \"source-layer\": sourceLayerId,\n                \"layout\": {\n                    'visibility': 'none'\n                },\n                \"paint\": {\n                    \"fill-opacity\": 0.0\n                }\n            });\n        }\n        \n    }\n}\n\n//# sourceURL=webpack:///./mapbox-layer-utils.js?");

/***/ }),

/***/ "./mapbox-onload.js":
/*!**************************!*\
  !*** ./mapbox-onload.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Awesomplete = __webpack_require__(/*! awesomplete */ \"./node_modules/awesomplete/awesomplete.js\");\nvar noUiSlider = __webpack_require__(/*! nouislider */ \"./node_modules/nouislider/distribute/nouislider.js\");\nvar MapboxInspect = __webpack_require__(/*! mapbox-gl-inspect */ \"./node_modules/mapbox-gl-inspect/index.js\");\nvar mapboxInspectToolkit = __webpack_require__(/*! ./mapbox-inspect.js */ \"./mapbox-inspect.js\");\n\nmodule.exports = function () {   \n    window._mintMap.mapInspect = new MapboxInspect({\n        showInspectButton: false,\n        showMapPopup: true,\n        // showInspectMapPopupOnHover:true,\n        showMapPopupOnHover: false,\n        showInspectMapPopupOnHover: false,\n        // queryParameters: {\n        //     layers: ['landuseLayer']\n        // },\n        renderPopup: function(features) {\n            return mapboxInspectToolkit.renderFeatures(features);\n        }\n    });\n    window._mintMap.map.addControl(window._mintMap.mapInspect);\n\n    fetch(\"http://jonsnow.usc.edu:8081/mintmap/meta/metadata.json?ver=\" + Math.random())\n    .then(response => response.json())\n    .then(json => {\n        // console.log('loaded');\n        // var layersIds = [];\n        // var layerNames = [];\n        // var layerIdSource = {};\n        // var layerIdName = {};\n        // // console.log(json.layerNames);\n        // var layerNames = \n        // for (var i = 0; i < json.layerNames.length; i++) {\n\n            // layersIds.push(json.layerIds[i]);\n            // layerIdSource[json.layerIds[i]] = json.sourceLayers[i];\n            // layerIdName[json.layerIds[i]] = json.sourceNames[i];\n        // }\n        // console.log(json);\n        mintMapObserver.metadata = json;                \n\n        var layersWrapper = document.createElement('div');\n        layersWrapper.className = \"settingsWrapper\";\n        var collapse = document.createElement('div');\n        collapse.className = \"collapse-control\";\n        collapse.innerHTML = \"\";\n        collapse.onclick = function (e) {\n            window._mintMap.toggleClass(_mintMapShadowRoot.querySelector('.settingsWrapper'), 'slideDown');\n            window._polymerMap.mint_map_element.querySelector('.settings').scrollTo(0,0)\n        }\n        layersWrapper.appendChild(collapse);\n        \n        var layers = document.createElement('div');\n        layers.className = \"settings\";\n        layersWrapper.appendChild(layers);\n        var layerSwitch = document.createElement('div');\n        layerSwitch.setAttribute('id','layerSwitch');\n        layers.appendChild(layerSwitch);\n        \n        var variableTitle = document.createElement('div');\n        variableTitle.className = 'variableTitle';\n        variableTitle.innerHTML = \"<h2>Layers</h2>\";\n        layers.appendChild(variableTitle);\n\n        var tagsList = document.createElement('div');\n        tagsList.setAttribute('id','theTagList');\n        tagsList.className = \"layerList tags\";\n\n        var tagul = document.createElement('ul');\n        tagul.setAttribute('id','the-ul-of-layer-list');\n        tagul.className = 'tags-list';\n        var tagSearch = document.createElement('li');\n        tagSearch.setAttribute('id','the-li-of-add-new-layer');\n        tagSearch.innerHTML = \"<a id='add-new-layer' class='tag function-tag' onclick='this.style.display=\\\"none\\\";window._polymerMap.mint_map_element.querySelector(\\\"#search-new-layer\\\").style.display=\\\"block\\\";window._polymerMap.mint_map_element.querySelector(\\\"#search-new-layer\\\").value=\\\"\\\";window._polymerMap.mint_map_element.querySelector(\\\"#search-new-layer\\\").focus();window._polymerMap.mint_map_element.querySelector(\\\"#the-li-of-add-new-layer .awesomplete\\\").style.display = \\\"inline-block\\\";return false;'>Add New Layer</a><input id='search-new-layer' class='awesomplete' style='display:none' placeholder='Search new layers'>\";\n\n        var tagShowAll = document.createElement('li');\n        tagShowAll.innerHTML = \"<a id='show-all-layers' class='tag function-tag' data-show='no'>Show All Layers</a>\";\n\n        tagul.appendChild(tagSearch);\n        tagul.appendChild(tagShowAll);\n        tagsList.appendChild(tagul);\n        layers.appendChild(tagsList);\n\n        var layersPropertyList = document.createElement('div');\n        layersPropertyList.className = \"properties\";\n        // for (var i = 0; i < json.layerIds.length; i++) {\n        //     var name = json.layerNames[i];\n        //     var id = json.layerIds[i];\n\n        // } \n        createProperitesPanel(layers, layersPropertyList, json.sourceLayers, json.layerNames, json.hasData, json.hasTimeline);\n        layers.appendChild(layersPropertyList);\n        _mintMapShadowRoot.querySelector('.geocoder').appendChild(geocoder.onAdd(map));\n        _mintMapShadowRoot.querySelector('.geocoder').appendChild(layersWrapper);\n\n\n        _mintMapShadowRoot.querySelectorAll(\".property-slider\").forEach(function (ele,idx) {\n            let panelId = ele.getAttribute(\"data-panel\");\n            noUiSlider.create(ele, window._mintMap.sliderData[panelId]);\n            ele.noUiSlider.on('update', function( values, handle ) {\n                // console.log(typeof values[handle]);\n            });\n            ele.noUiSlider.on('change', function( values, handle ) {\n                // let value = this.valuesOfYear[parseInt(values[handle])];\n                // let allValuesOfYear = Object.values(this.valuesOfYear);\n                // setPaint(value, allValuesOfYear);\n                // let visibility = map.getLayoutProperty(clickedLayer, 'visibility');\n                // console.log(window._mintMap.sliderData[panelId].extraOption , (new Date(values[handle])) );\n                let map = window._mintMap.map;\n                let d = new Date(parseInt(values[handle]));\n                if (isNaN(d.getTime())) {\n                    console.log(\"slider time stamp is wrong!\");\n                    return;\n                }\n                if (window._mintMap.mapInspect._popup.isOpen()) {\n                \twindow._mintMap.mapInspect._popup.remove();\n                }\n                let currentOpacity = ele.parentElement.parentElement.querySelector('.opacity-slider').value;\n                let layerOptions = window._mintMap.sliderData[panelId].extraOption;\n                let step = d.format(layerOptions.stepOption.format);\n                // console.log(values);\n                let layerId = panelId + 'Layer_raster_' + step;\n                // console.log(ele.parentElement.parentElement.querySelector('.opacity-slider'), step, layerOptions.step);\n                ele.parentElement.parentElement.querySelector('.opacity-slider').setAttribute('data-time', step);\n                if (step === layerOptions.step[0]) {\n                    layerId = panelId + 'Layer_raster';\n                    ele.parentElement.parentElement.querySelector('.opacity-slider').setAttribute('data-time', \"no\");\n                }\n                window._mintMap.map.setPaintProperty(layerId, 'raster-opacity', parseInt(currentOpacity, 10) / 100);\n                let visibility = window._mintMap.map.getLayoutProperty(layerId, 'visibility');\n                if (visibility !== 'visible') {\n                    window._mintMap.map.setLayoutProperty(layerId, 'visibility', 'visible');\n                }\n                layerOptions.step.map(function (ele,idx) {\n                    let tmp_layerId = panelId + 'Layer_raster_' + ele;\n                    if (idx === 0) {\n                        tmp_layerId = panelId + 'Layer_raster';\n                    }\n                    if (tmp_layerId !== layerId) {\n                        window._mintMap.map.setLayoutProperty(tmp_layerId, 'visibility', 'none');\n                    }\n                })\n            });\n        });\n\n\n        var searchNewLayer = _mintMapShadowRoot.querySelector(\"#search-new-layer\");\n        window._mintMap.autocomplete = new Awesomplete(searchNewLayer, {\n            list: window._mintMap.listOfLayersNotAdded,\n            maxItems: 5,\n            minChars: 1,\n            autoFirst:true\n        });\n        Awesomplete.$.bind(searchNewLayer, { \"awesomplete-selectcomplete\": function (event) {\n            // console.log(event);\n            var name = event.text.value;\n            var idx = json.layerNames.indexOf(name);\n            if (idx != -1) {\n                \n                var hasLayer = addNewLayerToMap(\n                    json.hasData[idx], \n                    json.layerIds[idx], \n                    json.layerNames[idx], \n                    json.sourceLayers[idx], \n                    json.hasData[idx] ? json.layers[idx].file : \"\",\n                    json.hasTimeline[idx]);\n                if (hasLayer) {\n                    window._mintMap.listOfLayersNotAdded = window._mintMap.listOfLayersNotAdded.filter(function (obj) {\n                        return obj.value !== json.layerNames[idx];\n                    });\n                    window._mintMap.autocomplete.list = window._mintMap.listOfLayersNotAdded;\n                }\n                \n                // var newLayer = document.createElement('li');\n                // newLayer.innerHTML = \"<a href='#' class='tag \" + (json.hasData[idx] ? \"with-data-tag\":\"no-data-tag\") + \"' data-layer-id='\"+json.layerIds[idx]+\"' data-has-data='\" + (json.hasData[idx] ? \"true\":\"false\") + \"'>\" + json.layerNames[idx] + \"<div class='tag_close'></div></a>\";\n                // var tagul = document.getElementById('the-ul-of-layer-list');\n                // var tagSearch = document.getElementById('the-li-of-add-new-layer');\n                // tagul.insertBefore(newLayer, tagSearch);\n                \n                // Change the style of function tag of search\n                var searchNewLayer = _mintMapShadowRoot.querySelector(\"#search-new-layer\");\n                searchNewLayer.style.display = \"none\";\n                \n                var addNewLayer = _mintMapShadowRoot.querySelector(\"#add-new-layer\");\n                addNewLayer.style.display = \"block\";\n                _mintMapShadowRoot.querySelector(\"#the-li-of-add-new-layer .awesomplete\").style.display = \"none\";\n            }\n        } });\n        window._mintMap.uiLoaded = true;\n    },\n    error => {\n        console.log(error);\n    });\n\n    window._mintMap.map.addControl(new mapboxgl.NavigationControl());\n    \n};\n\n//# sourceURL=webpack:///./mapbox-onload.js?");

/***/ }),

/***/ "./mapbox-utils.js":
/*!*************************!*\
  !*** ./mapbox-utils.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function removeLegend(sourceLayerName) {\n    var legendItem = _mintMapShadowRoot.querySelector('#map-legend .legend-of-' + sourceLayerName);\n    if (legendItem.parentNode) {\n        legendItem.parentNode.removeChild(legendItem);\n    }\n}\nfunction updateLegend(legendType, legend, sourceLayerName) {\n    var legendElement = _mintMapShadowRoot.querySelector('#map-legend');\n    // legendElement.innerHTML = '';\n    var legendItem = document.createElement('div');\n    legendItem.className = \"legend-item legend-of-\" + sourceLayerName; \n    legendElement.appendChild(legendItem);\n\n    var legendTitle = document.createElement('div');\n    legendTitle.className = 'legend-title'\n    legendTitle.innerHTML = \"Legend of layer <span>#\" + sourceLayerName + \"</span>:\";\n    legendItem.appendChild(legendTitle);\n\n    var legendContent = document.createElement('div');\n    legendContent.className = 'legend-legend'\n    legendItem.appendChild(legendContent);\n\n    if (legendType == 'discrete') {\n        for (i = 0; i < legend.length; i++) {\n          var label = legend[i].label + \"(\" + legend[i].value + \")\";\n          var color = legend[i].color;\n          var item = document.createElement('div');\n          var key = document.createElement('span');\n          key.className = 'legend-key';\n          key.style.backgroundColor = color;\n\n          var value = document.createElement('span');\n          value.innerHTML = label;\n          item.appendChild(key);\n          item.appendChild(value);\n          legendContent.appendChild(item);\n        }\n    }else if (legendType == 'linear') {\n        var legendBar = document.createElement('div');\n        legendBar.className = 'bar';\n        var color = [];\n        var text = [];\n        for (var i = 0; i < legend.length; i++) {\n            color.push(legend[i].color);\n            text.push(legend[i].value)\n        }\n        legendBar.style.background = 'linear-gradient(to right, ' + color.join(',') + ')';\n        legendContent.appendChild(legendBar);\n        var flex = document.createElement('div');\n        flex.className = 'legend-flex';\n        flex.innerHTML = '<span>' + text.join('</span><span>') + '</span>';\n        legendContent.appendChild(flex);\n    }\n}\nfunction drawOriginalBound(coordinates, id=\"\") {\n    // window._mintMap.metadata\n    let originalDataset = JSON.parse(window._mintMap.metadata.originalDataset);\n    originalDataset.features[0].geometry.coordinates = coordinates;\n    var layers = window._mintMap.map.getStyle().layers;\n    // Find the index of the first symbol layer in the map style\n    var firstSymbolId;\n    for (var i = 0; i < layers.length; i++) {\n        if (layers[i].type === 'symbol') {\n            firstSymbolId = layers[i].id;\n            break;\n        }\n    }\n    if (window._mintMap.map.getLayer('boundsOfOriginalDatasets' + id)) {\n        window._mintMap.map.removeLayer('boundsOfOriginalDatasets' + id);\n    }\n    if (!window._mintMap.map.getSource('boundsOfOriginalDatasets' + id)) {\n        window._mintMap.map.addLayer({\n            'id': 'boundsOfOriginalDatasets' + id,\n            'type': 'line',\n            'source': {\n                'type': 'geojson',\n                'data': originalDataset\n            },\n            'layout': {},\n            'paint': {\n                'line-width':2,\n                'line-color':'#000',\n                'line-opacity':0.8\n                // 'fill-color': '#e8e8e8',\n                // 'fill-opacity': 0.6\n            }\n        },firstSymbolId);\n    }else{\n        window._mintMap.map.addLayer({\n        'id': 'boundsOfOriginalDatasets' + id,\n        'type': 'line',\n        'source': 'boundsOfOriginalDatasets' + id,\n        'layout': {},\n        'paint': {\n            'line-width':6,\n            'line-color':'#000',\n            'line-opacity':1\n            // 'fill-color': '#e8e8e8',\n            // 'fill-opacity': 0.6\n        }\n    },firstSymbolId);\n    }\n}\nfunction hasLayerNameDisplayed(layerName) {\n    let temp = window._mintMap.listOfLayersNotAdded.filter(function (obj) {\n        return obj.value === layerName;\n    });\n    if (temp.length > 0) {\n        return true;\n    }\n    return false;\n}\nfunction updateListOfLayersNotAdded(json,removeFromList = true) {\n    if (removeFromList) {\n        window._mintMap.listOfLayersNotAdded = window._mintMap.listOfLayersNotAdded.filter(function (obj) {\n            return obj.value !== json.layerName;\n        });\n    }else{\n        window._mintMap.listOfLayersNotAdded = window._mintMap.listOfLayersNotAdded.filter(function (obj) {\n            return obj.value !== json.layerName;\n        });\n        if (!json.hasData) {\n            window._mintMap.listOfLayersNotAdded.unshift({label:json.layerName + \" (No data)\", value: json.layerName, id: json.layerId, hasData: json.hasData, source: json.sourceLayer, file:\"\"});\n        }else{\n            window._mintMap.listOfLayersNotAdded.unshift({label:json.layerName, value: json.layerName, id: json.layerId, hasData: json.hasData, source: json.sourceLayer, file:json.file, hasTimeline: json.hasTimeline});\n        }\n    }\n    window._mintMap.autocomplete.list = window._mintMap.listOfLayersNotAdded;\n}\n\n//# sourceURL=webpack:///./mapbox-utils.js?");

/***/ }),

/***/ "./mintmap-ui-utils.js":
/*!*****************************!*\
  !*** ./mintmap-ui-utils.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var wNumb = __webpack_require__(/*! wnumb */ \"./node_modules/wnumb/wNumb.js\");\n\nfunction createProperitesPanel(layers, layersPropertyList, layersIds, layerNames, haveData, haveTimeline ) {\n\n    // var layersPropertyList = document.createElement('div');\n    // layersPropertyList.className = \"properties\";\n    \n    for (var i = 0; i < layersIds.length; i++) {\n        if (!haveData[i]) {\n            continue;\n        }\n        var id = layersIds[i] + \"Layer\";\n        var name = layerNames[i];\n\n        var layerProperty = document.createElement('div');\n        layerProperty.setAttribute('id','layerById-' + id);\n        layerProperty.className=\"card\";\n        layerProperty.style.display = \"none\";\n        layerProperty.innerHTML = \"<h3>\" + name + \" Layer Properties</h3>\" \n                                 + \"<div class='props'>\" \n                                 + \"<h4>Opacity</h4>\" \n                                 + \"<div class='control'>\" \n                                 + \"<input type='range' min='1' max='100' value='80' class='slider opacity-slider' \" \n        \t\t\t\t\t\t + \"data-time='no' \"\n                                 + \"oninput='window._mintMap.setOpacity(\\\"\"+id+\"\\\", this.value, this.getAttribute(\\\"data-time\\\"))'>\"\n                                 + \"</div>\";\n        if (haveTimeline[i]) {\n            // console.log(layersIds[i],window._mintMap.metadata.layers);\n            // layerids is sourcelayer id!!!\n            let timeLineData = window._mintMap.metadata.layers.filter(function (ele) {\n                return ele['source-layer'] === layersIds[i];\n            })[0];\n            layerProperty.innerHTML += \"<div class='props'>\"\n                                 + \"<h4>\" + timeLineData.stepType + (typeof timeLineData.stepOption.prefix === \"undefined\" ? \"\" : (\" (\" + timeLineData.stepOption.prefix + \")\") ) + \"</h4>\"\n                                 + '<div class=\"property-slider\" id=\"property-slider-'+layersIds[i]\n                                 // layerids is sourcelayer id!!!\n                                 +'\" data-panel=\"' + layersIds[i] + '\"><div>'\n                                 + \"</div>\";\n\n            let years = timeLineData.step.map(function (ele) {\n                if (timeLineData.stepOption.format === \"yyyy\") {\n              \t\treturn new Date(ele,0,1).getTime();\t\n              \t}else if (timeLineData.stepOption.format === \"MM\") {\n              \t\treturn new Date(parseInt(timeLineData.stepOption.prefix), parseInt(ele)-1,1).getTime();\n              \t}\n                return (new Date(ele)).getTime();\n            });\n            console.log(years);\n            let yearsLength = years.length-1;\n            let yearRange = {\n                    'min': [years[0]],\n                    'max': [years[yearsLength]]\n                };\n            let yearDiff = yearRange.max - yearRange.min;\n            years.forEach(function (year, idx) {\n                if (idx === 0 || idx === yearsLength) {\n                    return;\n                }\n                let percent = Math.ceil((year - years[0])/yearDiff*100) + \"%\";\n                yearRange[percent] = [year];\n            });\n            window._mintMap.sliderData[layersIds[i]] = {\n                    start: yearRange.min, \n                    snap: true, \n                    range: yearRange, \n                    connect: [true, false],\n                    // tooltips: true,\n                    format: wNumb({\n                        decimals: 0\n                    }),\n                    pips: {\n                        mode: 'range',\n                        density: 100,\n                        format: {\n                          to: function ( value ) {\n                            return  (new Date(value)).format(timeLineData.stepOption.format);\n                          },\n                          from: function ( value ) {\n                          \tif (timeLineData.stepOption.format === \"yyyy\") {\n                          \t\treturn new Date(value,0,1).getTime();\t\n                          \t}else if (timeLineData.stepOption.format === \"MM\") {\n                          \t\treturn new Date(value).getTime();\n                          \t}\n                          \treturn new Date(value).getTime();\n                          }\n                        }\n                    },\n                    extraOption: timeLineData\n                }\n        }\n\n                                 \n\n        var isVis = window._mintMap.map.getLayer(id); //&& map.getLayoutProperty(id, 'visibility') === \"visible\";\n        if (isVis) {\n            if (window._mintMap.map.getLayoutProperty(id, 'visibility') === \"visible\") {\n                layerProperty.style.display = \"block\";\n            }\n        }\n        layersPropertyList.appendChild(layerProperty);\n        // layers.appendChild(link);\n    }\n\n    // body...\n}\nfunction updatePropertiesSettingBy(layerName, remove = true) {\n    var ele = _mintMapShadowRoot.querySelector('#layerById-' + layerName);\n    if (remove) {\n        ele.style.display = \"none\";\n    } else {\n        ele.style.display = \"block\";\n    }\n}\n   \nfunction updateShowAllDiv(isClick = true) {\n    var showAllLayers = _mintMapShadowRoot.querySelector('#show-all-layers');\n    var tagul = _mintMapShadowRoot.querySelector('#the-ul-of-layer-list');\n    for (var i = 0; i < window._mintMap.listOfLayersNotAdded.length; i++) {\n        let alreadyDisplayed = tagul.querySelector(\"[data-layer-id=\"+window._mintMap.listOfLayersNotAdded[i].id+\"]\");\n        if (alreadyDisplayed) {\n            alreadyDisplayed.parentNode.remove();\n        }\n    }\n    if (!isClick && showAllLayers.getAttribute('data-show') == 'no') {\n        return;\n    }\n    \n    var showAll = document.createElement('ul');\n    showAll.className='tags-list';\n    showAll.setAttribute('id','show-all-div');\n    for (var i = 0; i < window._mintMap.listOfLayersNotAdded.length; i++) {\n        var newLayer = document.createElement('li');\n        newLayer.innerHTML = \"<a class='tag \" \n                            + (window._mintMap.listOfLayersNotAdded[i].hasData ? \"with-data-tag\":\"no-data-tag\") \n                            + \"' data-layer-id='\"+ window._mintMap.listOfLayersNotAdded[i].id +\"' data-has-data='\" \n                            + (window._mintMap.listOfLayersNotAdded[i].hasData ? \"true\":\"false\") \n                            + \"' data-source-layer='\" + window._mintMap.listOfLayersNotAdded[i].source \n                            + \"' data-file='\"+ window._mintMap.listOfLayersNotAdded[i].file \n                            + \"' data-has-timeline='\" + (window._mintMap.listOfLayersNotAdded[i].hasTimeline ? \"true\":\"false\") + \"'>\" \n                            + window._mintMap.listOfLayersNotAdded[i].value \n                            + \"<div class='tag_close tag_add'></div></a>\";\n        showAll.appendChild(newLayer);\n    }\n    var clearBoth = document.createElement('div');\n    clearBoth.style.clear = \"both\";\n    showAll.appendChild(clearBoth);\n    var showDiv = _mintMapShadowRoot.querySelector('#show-all-div');\n    if(showDiv){\n        showDiv.remove();\n    }\n    _mintMapShadowRoot.querySelector('#theTagList').appendChild(showAll);\n    \n}\n\n\n\n//# sourceURL=webpack:///./mintmap-ui-utils.js?");

/***/ }),

/***/ "./mintmap-variable.js":
/*!*****************************!*\
  !*** ./mintmap-variable.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function handle_variable() {\n    if (!window._mintMap.uiLoaded) {\n        setTimeout(handle_variable, 1000);\n        return;\n    }\n    let value = window._mintMap.metadata;\n    if (window._mintMap.variableArray.length === 0) {\n        return;\n    }\n    let idxToBeRemoved = [];\n    window._mintMap.displayed.forEach(function (ele,idx) {\n        // console.log(variableArrayMD5s)\n        let alreadyDisplayed = window._mintMap.variableArray.filter(function (obj) {\n            return obj.md5 === ele;\n        });\n        // let isDisplayed = variableArrayMD5s.indexOf(ele);\n        if (alreadyDisplayed.length === 0) {\n            // remove \n            let idx = window._mintMap.metadata.vectorMD5.indexOf(ele);\n            let sourceLayer = window._mintMap.metadata.sourceLayers[idx];\n            removeLayerFromMap(sourceLayer, window._mintMap.metadata.hasTimeline[idx]);\n            removeInspectLayers(sourceLayer + \"Layer\");\n\n            \n            updateListOfLayersNotAdded({layerName: window._mintMap.metadata.layerNames[idx],\n                layerId: window._mintMap.metadata.layerIds[idx], \n                hasData: true,\n                sourceLayer: sourceLayer, \n                file:\"ckan\",\n                hasTimeline: window._mintMap.metadata.hasTimeline[idx]\n            },\n            false);\n            // console.log(sourceLayer,{layerName:window._mintMap.getLayerNameBySoureLayer(sourceLayer)},window._mintMap.listOfLayersNotAdded);\n\n            updateShowAllDiv(false);\n            idxToBeRemoved.push(idx);\n        }\n    });\n    idxToBeRemoved.forEach(function (ele, idx) {\n        window._mintMap.displayed.splice(idx,1);\n    })\n    // window._mintMap.displayed = [];\n\n    for (var i = 0; i < window._mintMap.variableArray.length; i++) {\n        if (!(\"vectorMD5\" in value)) {\n            break;\n        }\n        let md5idx = value.vectorMD5.indexOf(window._mintMap.variableArray[i].md5);\n        if (md5idx === -1) {\n            continue;\n        }\n        let displayedIdx = window._mintMap.displayed.indexOf(value.sourceLayers[md5idx]);\n\n        if (!hasLayerNameDisplayed(value.layerNames[md5idx])) {\n            continue;\n        }\n        addNewLayerToMap(value.hasData[md5idx], \n            value.layerIds[md5idx], \n            value.layerNames[md5idx], \n            value.sourceLayers[md5idx], \n            \"file\",\n            value.hasTimeline[md5idx]\n        );\n    }\n}\n\n// Use proxy to observe the change of displayed layer name\n// window._mintMap.listOfLayersNotAdded=[];\nconst variableHandler1 = {\n  set(target, key, value) {\n    // console.log(`handler1 Setting value ${key} as ${value}`);\n    // console.log(target);\n    // set up to display when length is changed\n    target[key] = value;\n    if (key === 'length' && value === window._mintMap.variableArrayCount) {\n        // traversal current displayed \n        // remove source/layer not in\n        // add all\n        if (window._mintMap.metadata.length !== 0) {\n            console.log(window._mintMap.variableArray);\n            handle_variable();\n        }\n    }\n    return true;//Reflect.set(...arguments);\n  }\n};\nconst variableHandler2 = {\n    set(target, key, value) {\n        // console.log(`handler2 Setting value ${key} as ${value}`);\n        target[key] = value;\n        if (key === 'metadata') {\n            // console.log(target);\n            // console.log(value);\n            window._mintMap.listOfLayersNotAdded=[];\n            let json = value;\n            for (var i = 0; i < json.layerNames.length; i++) {\n                if (!json.hasData[i]) {\n                    window._mintMap.listOfLayersNotAdded.push({\n                        label:json.layerNames[i] + \" (No data)\", \n                        value: json.layerNames[i], \n                        id: json.layerIds[i], \n                        hasData: json.hasData[i], \n                        source: json.sourceLayers[i], \n                        file:\"\",\n                        hasTimeline:false\n                    });    \n                }else{\n                    // if (json.layerNames[i] != window.__defaultLayerName) {\n                    window._mintMap.listOfLayersNotAdded.push({\n                        label:json.layerNames[i], \n                        value: json.layerNames[i], \n                        id: json.layerIds[i], \n                        hasData: json.hasData[i], \n                        source: json.sourceLayers[i], \n                        file: json.layers[i].file,\n                        hasTimeline: json.hasTimeline[i]\n                    });\n                    // }\n                }\n            }\n            if (window._mintMap.variableArray.length !== 0) {\n                handle_variable();\n            }\n        }\n        return true;\n        // return Reflect.set(...arguments);\n    }\n}\n\nmodule.exports = {\n    handle_variable: handle_variable,\n    variableHandler1: variableHandler1,\n    variableHandler2: variableHandler2\n};\n\n//# sourceURL=webpack:///./mintmap-variable.js?");

/***/ }),

/***/ "./mintmap.js":
/*!********************!*\
  !*** ./mintmap.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window._mintMap = {\n    setOpacity: () => {},\n    onresize: () => {},\n    getLayerNameBySoureLayer: () => {},\n    variableArrayCount: 0,\n    metadata: [],\n    listOfLayersNotAdded: [],\n    displayed: [],\n    variableArray: [],\n    mapInspect: {},\n    uiLoaded: false,\n    autocomplete: {},\n    toggleClass: () => {},\n    bounds: [22.4, 3.4, 37.0, 23.2],\n    sliderData: {}\n};\n\nwindow._mintMap.onresize = function() {\n      window._polymerMap.mint_map_element.style.height = window._polymerMap.mint_map_element.parentNode.host.clientHeight + \"px\";\n      window._mintMap.map.resize();\n};\nwindow._mintMap.toggleClass = function(element, className){\n    if (!element || !className){\n        return;\n    }\n    \n    var classString = element.className, nameIndex = classString.indexOf(className);\n    if (nameIndex == -1) {\n        classString += ' ' + className;\n    }\n    else {\n        classString = classString.substr(0, nameIndex) + classString.substr(nameIndex+className.length);\n    }\n    element.className = classString;\n}\nwindow._mintMap.setOpacity = function(layerId, value, timeline = \"no\") {\n    // map.setPaintProperty(layerId, 'fill-opacity', parseInt(value, 10) / 100);\n    if (timeline !== \"no\") {\n        window._mintMap.map.setPaintProperty(layerId+'_raster_' + timeline, 'raster-opacity', parseInt(value, 10) / 100);\n    }else{\n        window._mintMap.map.setPaintProperty(layerId+'_raster', 'raster-opacity', parseInt(value, 10) / 100);\n    }\n}\n\nwindow._mintMap.getLayerNameBySoureLayer = function(sourceLayer) {\n    let tempIdx = window._mintMap.metadata.sourceLayers.indexOf(sourceLayer);\n    if (tempIdx !== -1) {\n        return window._mintMap.metadata.layerNames[tempIdx];\n    }\n    return undefined;\n}\n\n//# sourceURL=webpack:///./mintmap.js?");

/***/ }),

/***/ "./node_modules/awesomplete/awesomplete.js":
/*!*************************************************!*\
  !*** ./node_modules/awesomplete/awesomplete.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Simple, lightweight, usable local autocomplete library for modern browsers\n * Because there weren’t enough autocomplete scripts in the world? Because I’m completely insane and have NIH syndrome? Probably both. :P\n * @author Lea Verou http://leaverou.github.io/awesomplete\n * MIT license\n */\n\n(function () {\n\nvar _ = function (input, o) {\n\tvar me = this;\n\n    // Keep track of number of instances for unique IDs\n    _.count = (_.count || 0) + 1;\n    this.count = _.count;\n\n\t// Setup\n\n\tthis.isOpened = false;\n\n\tthis.input = $(input);\n\tthis.input.setAttribute(\"autocomplete\", \"awesomplete\");\n\tthis.input.setAttribute(\"aria-owns\", \"awesomplete_list_\" + this.count);\n\tthis.input.setAttribute(\"role\", \"combobox\");\n\n\t// store constructor options in case we need to distinguish\n\t// between default and customized behavior later on\n\tthis.options = o = o || {};\n\n\tconfigure(this, {\n\t\tminChars: 2,\n\t\tmaxItems: 10,\n\t\tautoFirst: false,\n\t\tdata: _.DATA,\n\t\tfilter: _.FILTER_CONTAINS,\n\t\tsort: o.sort === false ? false : _.SORT_BYLENGTH,\n\t\tcontainer: _.CONTAINER,\n\t\titem: _.ITEM,\n\t\treplace: _.REPLACE,\n\t\ttabSelect: false\n\t}, o);\n\n\tthis.index = -1;\n\n\t// Create necessary elements\n\n\tthis.container = this.container(input);\n\n\tthis.ul = $.create(\"ul\", {\n\t\thidden: \"hidden\",\n        role: \"listbox\",\n        id: \"awesomplete_list_\" + this.count,\n\t\tinside: this.container\n\t});\n\n\tthis.status = $.create(\"span\", {\n\t\tclassName: \"visually-hidden\",\n\t\trole: \"status\",\n\t\t\"aria-live\": \"assertive\",\n        \"aria-atomic\": true,\n        inside: this.container,\n        textContent: this.minChars != 0 ? (\"Type \" + this.minChars + \" or more characters for results.\") : \"Begin typing for results.\"\n\t});\n\n\t// Bind events\n\n\tthis._events = {\n\t\tinput: {\n\t\t\t\"input\": this.evaluate.bind(this),\n\t\t\t\"blur\": this.close.bind(this, { reason: \"blur\" }),\n\t\t\t\"keydown\": function(evt) {\n\t\t\t\tvar c = evt.keyCode;\n\n\t\t\t\t// If the dropdown `ul` is in view, then act on keydown for the following keys:\n\t\t\t\t// Enter / Esc / Up / Down\n\t\t\t\tif(me.opened) {\n\t\t\t\t\tif (c === 13 && me.selected) { // Enter\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\tme.select();\n\t\t\t\t\t}\n\t\t\t\t\telse if (c === 9 && me.selected && me.tabSelect) {\n\t\t\t\t\t\tme.select();\n\t\t\t\t\t}\n\t\t\t\t\telse if (c === 27) { // Esc\n\t\t\t\t\t\tme.close({ reason: \"esc\" });\n\t\t\t\t\t}\n\t\t\t\t\telse if (c === 38 || c === 40) { // Down/Up arrow\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\tme[c === 38? \"previous\" : \"next\"]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tform: {\n\t\t\t\"submit\": this.close.bind(this, { reason: \"submit\" })\n\t\t},\n\t\tul: {\n\t\t\t// Prevent the default mousedowm, which ensures the input is not blurred.\n\t\t\t// The actual selection will happen on click. This also ensures dragging the\n\t\t\t// cursor away from the list item will cancel the selection\n\t\t\t\"mousedown\": function(evt) {\n\t\t\t\tevt.preventDefault();\n\t\t\t},\n\t\t\t// The click event is fired even if the corresponding mousedown event has called preventDefault\n\t\t\t\"click\": function(evt) {\n\t\t\t\tvar li = evt.target;\n\n\t\t\t\tif (li !== this) {\n\n\t\t\t\t\twhile (li && !/li/i.test(li.nodeName)) {\n\t\t\t\t\t\tli = li.parentNode;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (li && evt.button === 0) {  // Only select on left click\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\tme.select(li, evt.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t$.bind(this.input, this._events.input);\n\t$.bind(this.input.form, this._events.form);\n\t$.bind(this.ul, this._events.ul);\n\n\tif (this.input.hasAttribute(\"list\")) {\n\t\tthis.list = \"#\" + this.input.getAttribute(\"list\");\n\t\tthis.input.removeAttribute(\"list\");\n\t}\n\telse {\n\t\tthis.list = this.input.getAttribute(\"data-list\") || o.list || [];\n\t}\n\n\t_.all.push(this);\n};\n\n_.prototype = {\n\tset list(list) {\n\t\tif (Array.isArray(list)) {\n\t\t\tthis._list = list;\n\t\t}\n\t\telse if (typeof list === \"string\" && list.indexOf(\",\") > -1) {\n\t\t\t\tthis._list = list.split(/\\s*,\\s*/);\n\t\t}\n\t\telse { // Element or CSS selector\n\t\t\tlist = $(list);\n\n\t\t\tif (list && list.children) {\n\t\t\t\tvar items = [];\n\t\t\t\tslice.apply(list.children).forEach(function (el) {\n\t\t\t\t\tif (!el.disabled) {\n\t\t\t\t\t\tvar text = el.textContent.trim();\n\t\t\t\t\t\tvar value = el.value || text;\n\t\t\t\t\t\tvar label = el.label || text;\n\t\t\t\t\t\tif (value !== \"\") {\n\t\t\t\t\t\t\titems.push({ label: label, value: value });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis._list = items;\n\t\t\t}\n\t\t}\n\n\t\tif (document.activeElement === this.input) {\n\t\t\tthis.evaluate();\n\t\t}\n\t},\n\n\tget selected() {\n\t\treturn this.index > -1;\n\t},\n\n\tget opened() {\n\t\treturn this.isOpened;\n\t},\n\n\tclose: function (o) {\n\t\tif (!this.opened) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.ul.setAttribute(\"hidden\", \"\");\n\t\tthis.isOpened = false;\n\t\tthis.index = -1;\n\n\t\tthis.status.setAttribute(\"hidden\", \"\");\n\n\t\t$.fire(this.input, \"awesomplete-close\", o || {});\n\t},\n\n\topen: function () {\n\t\tthis.ul.removeAttribute(\"hidden\");\n\t\tthis.isOpened = true;\n\n\t\tthis.status.removeAttribute(\"hidden\");\n\n\t\tif (this.autoFirst && this.index === -1) {\n\t\t\tthis.goto(0);\n\t\t}\n\n\t\t$.fire(this.input, \"awesomplete-open\");\n\t},\n\n\tdestroy: function() {\n\t\t//remove events from the input and its form\n\t\t$.unbind(this.input, this._events.input);\n\t\t$.unbind(this.input.form, this._events.form);\n\n\t\t// cleanup container if it was created by Awesomplete but leave it alone otherwise\n\t\tif (!this.options.container) {\n\t\t\t//move the input out of the awesomplete container and remove the container and its children\n\t\t\tvar parentNode = this.container.parentNode;\n\n\t\t\tparentNode.insertBefore(this.input, this.container);\n\t\t\tparentNode.removeChild(this.container);\n\t\t}\n\n\t\t//remove autocomplete and aria-autocomplete attributes\n\t\tthis.input.removeAttribute(\"autocomplete\");\n\t\tthis.input.removeAttribute(\"aria-autocomplete\");\n\n\t\t//remove this awesomeplete instance from the global array of instances\n\t\tvar indexOfAwesomplete = _.all.indexOf(this);\n\n\t\tif (indexOfAwesomplete !== -1) {\n\t\t\t_.all.splice(indexOfAwesomplete, 1);\n\t\t}\n\t},\n\n\tnext: function () {\n\t\tvar count = this.ul.children.length;\n\t\tthis.goto(this.index < count - 1 ? this.index + 1 : (count ? 0 : -1) );\n\t},\n\n\tprevious: function () {\n\t\tvar count = this.ul.children.length;\n\t\tvar pos = this.index - 1;\n\n\t\tthis.goto(this.selected && pos !== -1 ? pos : count - 1);\n\t},\n\n\t// Should not be used, highlights specific item without any checks!\n\tgoto: function (i) {\n\t\tvar lis = this.ul.children;\n\n\t\tif (this.selected) {\n\t\t\tlis[this.index].setAttribute(\"aria-selected\", \"false\");\n\t\t}\n\n\t\tthis.index = i;\n\n\t\tif (i > -1 && lis.length > 0) {\n\t\t\tlis[i].setAttribute(\"aria-selected\", \"true\");\n\n\t\t\tthis.status.textContent = lis[i].textContent + \", list item \" + (i + 1) + \" of \" + lis.length;\n\n            this.input.setAttribute(\"aria-activedescendant\", this.ul.id + \"_item_\" + this.index);\n\n\t\t\t// scroll to highlighted element in case parent's height is fixed\n\t\t\tthis.ul.scrollTop = lis[i].offsetTop - this.ul.clientHeight + lis[i].clientHeight;\n\n\t\t\t$.fire(this.input, \"awesomplete-highlight\", {\n\t\t\t\ttext: this.suggestions[this.index]\n\t\t\t});\n\t\t}\n\t},\n\n\tselect: function (selected, origin) {\n\t\tif (selected) {\n\t\t\tthis.index = $.siblingIndex(selected);\n\t\t} else {\n\t\t\tselected = this.ul.children[this.index];\n\t\t}\n\n\t\tif (selected) {\n\t\t\tvar suggestion = this.suggestions[this.index];\n\n\t\t\tvar allowed = $.fire(this.input, \"awesomplete-select\", {\n\t\t\t\ttext: suggestion,\n\t\t\t\torigin: origin || selected\n\t\t\t});\n\n\t\t\tif (allowed) {\n\t\t\t\tthis.replace(suggestion);\n\t\t\t\tthis.close({ reason: \"select\" });\n\t\t\t\t$.fire(this.input, \"awesomplete-selectcomplete\", {\n\t\t\t\t\ttext: suggestion\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\n\tevaluate: function() {\n\t\tvar me = this;\n\t\tvar value = this.input.value;\n\n\t\tif (value.length >= this.minChars && this._list && this._list.length > 0) {\n\t\t\tthis.index = -1;\n\t\t\t// Populate list with options that match\n\t\t\tthis.ul.innerHTML = \"\";\n\n\t\t\tthis.suggestions = this._list\n\t\t\t\t.map(function(item) {\n\t\t\t\t\treturn new Suggestion(me.data(item, value));\n\t\t\t\t})\n\t\t\t\t.filter(function(item) {\n\t\t\t\t\treturn me.filter(item, value);\n\t\t\t\t});\n\n\t\t\tif (this.sort !== false) {\n\t\t\t\tthis.suggestions = this.suggestions.sort(this.sort);\n\t\t\t}\n\n\t\t\tthis.suggestions = this.suggestions.slice(0, this.maxItems);\n\n\t\t\tthis.suggestions.forEach(function(text, index) {\n\t\t\t\t\tme.ul.appendChild(me.item(text, value, index));\n\t\t\t\t});\n\n\t\t\tif (this.ul.children.length === 0) {\n\n                this.status.textContent = \"No results found\";\n\n\t\t\t\tthis.close({ reason: \"nomatches\" });\n\n\t\t\t} else {\n\t\t\t\tthis.open();\n\n                this.status.textContent = this.ul.children.length + \" results found\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.close({ reason: \"nomatches\" });\n\n                this.status.textContent = \"No results found\";\n\t\t}\n\t}\n};\n\n// Static methods/properties\n\n_.all = [];\n\n_.FILTER_CONTAINS = function (text, input) {\n\treturn RegExp($.regExpEscape(input.trim()), \"i\").test(text);\n};\n\n_.FILTER_STARTSWITH = function (text, input) {\n\treturn RegExp(\"^\" + $.regExpEscape(input.trim()), \"i\").test(text);\n};\n\n_.SORT_BYLENGTH = function (a, b) {\n\tif (a.length !== b.length) {\n\t\treturn a.length - b.length;\n\t}\n\n\treturn a < b? -1 : 1;\n};\n\n_.CONTAINER = function (input) {\n\treturn $.create(\"div\", {\n\t\tclassName: \"awesomplete\",\n\t\taround: input\n\t});\n}\n\n_.ITEM = function (text, input, item_id) {\n\tvar html = input.trim() === \"\" ? text : text.replace(RegExp($.regExpEscape(input.trim()), \"gi\"), \"<mark>$&</mark>\");\n\treturn $.create(\"li\", {\n\t\tinnerHTML: html,\n\t\t\"aria-selected\": \"false\",\n        \"id\": \"awesomplete_list_\" + this.count + \"_item_\" + item_id\n\t});\n};\n\n_.REPLACE = function (text) {\n\tthis.input.value = text.value;\n};\n\n_.DATA = function (item/*, input*/) { return item; };\n\n// Private functions\n\nfunction Suggestion(data) {\n\tvar o = Array.isArray(data)\n\t  ? { label: data[0], value: data[1] }\n\t  : typeof data === \"object\" && \"label\" in data && \"value\" in data ? data : { label: data, value: data };\n\n\tthis.label = o.label || o.value;\n\tthis.value = o.value;\n}\nObject.defineProperty(Suggestion.prototype = Object.create(String.prototype), \"length\", {\n\tget: function() { return this.label.length; }\n});\nSuggestion.prototype.toString = Suggestion.prototype.valueOf = function () {\n\treturn \"\" + this.label;\n};\n\nfunction configure(instance, properties, o) {\n\tfor (var i in properties) {\n\t\tvar initial = properties[i],\n\t\t    attrValue = instance.input.getAttribute(\"data-\" + i.toLowerCase());\n\n\t\tif (typeof initial === \"number\") {\n\t\t\tinstance[i] = parseInt(attrValue);\n\t\t}\n\t\telse if (initial === false) { // Boolean options must be false by default anyway\n\t\t\tinstance[i] = attrValue !== null;\n\t\t}\n\t\telse if (initial instanceof Function) {\n\t\t\tinstance[i] = null;\n\t\t}\n\t\telse {\n\t\t\tinstance[i] = attrValue;\n\t\t}\n\n\t\tif (!instance[i] && instance[i] !== 0) {\n\t\t\tinstance[i] = (i in o)? o[i] : initial;\n\t\t}\n\t}\n}\n\n// Helpers\n\nvar slice = Array.prototype.slice;\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nfunction $$(expr, con) {\n\treturn slice.call((con || document).querySelectorAll(expr));\n}\n\n$.create = function(tag, o) {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t\tif (ref.getAttribute(\"autofocus\") != null) {\n\t\t\t\tref.focus();\n\t\t\t}\n\t\t}\n\t\telse if (i in element) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\n$.bind = function(element, o) {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.unbind = function(element, o) {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.fire = function(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n};\n\n$.regExpEscape = function (s) {\n\treturn s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n};\n\n$.siblingIndex = function (el) {\n\t/* eslint-disable no-cond-assign */\n\tfor (var i = 0; el = el.previousElementSibling; i++);\n\treturn i;\n};\n\n// Initialization\n\nfunction init() {\n\t$$(\"input.awesomplete\").forEach(function (input) {\n\t\tnew _(input);\n\t});\n}\n\n// Make sure to export Awesomplete on self when in a browser\nif (typeof self !== \"undefined\") {\n\tself.Awesomplete = _;\n}\n\n// Are we in a browser? Check for Document constructor\nif (typeof Document !== \"undefined\") {\n\t// DOM already loaded?\n\tif (document.readyState !== \"loading\") {\n\t\tinit();\n\t}\n\telse {\n\t\t// Wait for it\n\t\tdocument.addEventListener(\"DOMContentLoaded\", init);\n\t}\n}\n\n_.$ = $;\n_.$$ = $$;\n\n// Expose Awesomplete as a CJS module\nif ( true && module.exports) {\n\tmodule.exports = _;\n}\n\nreturn _;\n\n}());\n\n\n//# sourceURL=webpack:///./node_modules/awesomplete/awesomplete.js?");

/***/ }),

/***/ "./node_modules/charenc/charenc.js":
/*!*****************************************!*\
  !*** ./node_modules/charenc/charenc.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n\n\n//# sourceURL=webpack:///./node_modules/charenc/charenc.js?");

/***/ }),

/***/ "./node_modules/crypt/crypt.js":
/*!*************************************!*\
  !*** ./node_modules/crypt/crypt.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n\n\n//# sourceURL=webpack:///./node_modules/crypt/crypt.js?");

/***/ }),

/***/ "./node_modules/is-buffer/index.js":
/*!*****************************************!*\
  !*** ./node_modules/is-buffer/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n//# sourceURL=webpack:///./node_modules/is-buffer/index.js?");

/***/ }),

/***/ "./node_modules/lodash.isequal/index.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash.isequal/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, module) {/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/lodash.isequal/index.js?");

/***/ }),

/***/ "./node_modules/mapbox-gl-inspect/index.js":
/*!*************************************************!*\
  !*** ./node_modules/mapbox-gl-inspect/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var MapboxInspect = __webpack_require__(/*! ./lib/MapboxInspect */ \"./node_modules/mapbox-gl-inspect/lib/MapboxInspect.js\");\nmodule.exports = MapboxInspect;\n\n\n//# sourceURL=webpack:///./node_modules/mapbox-gl-inspect/index.js?");

/***/ }),

/***/ "./node_modules/mapbox-gl-inspect/lib/InspectButton.js":
/*!*************************************************************!*\
  !*** ./node_modules/mapbox-gl-inspect/lib/InspectButton.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function container(child, show) {\n  var container = document.createElement('div');\n  container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';\n  container.appendChild(child);\n  if (!show) {\n    container.style.display = 'none';\n  }\n  return container;\n}\n\nfunction button() {\n  var btn = document.createElement('button');\n  btn.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-inspect';\n  btn.type = 'button';\n  btn['aria-label'] = 'Inspect';\n  return btn;\n}\n\nfunction InspectButton(options) {\n  options = Object.assign({\n    show: true,\n    onToggle: function () {}\n  }, options);\n\n  this._btn = button();\n  this._btn.onclick = options.onToggle;\n  this.elem = container(this._btn, options.show);\n}\n\nInspectButton.prototype.setInspectIcon = function () {\n  this._btn.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-inspect';\n};\n\nInspectButton.prototype.setMapIcon = function () {\n  this._btn.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-map';\n};\n\nmodule.exports = InspectButton;\n\n\n//# sourceURL=webpack:///./node_modules/mapbox-gl-inspect/lib/InspectButton.js?");

/***/ }),

/***/ "./node_modules/mapbox-gl-inspect/lib/MapboxInspect.js":
/*!*************************************************************!*\
  !*** ./node_modules/mapbox-gl-inspect/lib/MapboxInspect.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var stylegen = __webpack_require__(/*! ./stylegen */ \"./node_modules/mapbox-gl-inspect/lib/stylegen.js\");\nvar InspectButton = __webpack_require__(/*! ./InspectButton */ \"./node_modules/mapbox-gl-inspect/lib/InspectButton.js\");\nvar isEqual = __webpack_require__(/*! lodash.isequal */ \"./node_modules/lodash.isequal/index.js\");\nvar renderPopup = __webpack_require__(/*! ./renderPopup */ \"./node_modules/mapbox-gl-inspect/lib/renderPopup.js\");\nvar colors = __webpack_require__(/*! ./colors */ \"./node_modules/mapbox-gl-inspect/lib/colors.js\");\n\nfunction isInspectStyle(style) {\n  return style.metadata && style.metadata['mapbox-gl-inspect:inspect'];\n}\n\nfunction markInspectStyle(style) {\n  return Object.assign(style, {\n    metadata: Object.assign({}, style.metadata, {\n      'mapbox-gl-inspect:inspect': true\n    })\n  });\n}\n\nfunction fixRasterSource(source) {\n  if (\n    (source.type === 'raster' || source.type === 'raster-dem') &&\n    source.tileSize && source.tiles\n  ) {\n    return {\n      type: source.type,\n      tileSize: source.tileSize,\n      tiles: source.tiles\n    };\n  }\n  if (\n    (source.type === 'raster' || source.type === 'raster-dem') &&\n    source.url\n  ) {\n    return {\n      type: source.type,\n      url: source.url\n    };\n  }\n  return source;\n}\n\n//TODO: We can remove this at some point in the future\nfunction fixStyle(style) {\n  Object.keys(style.sources).forEach(function (sourceId) {\n    style.sources[sourceId] = fixRasterSource(style.sources[sourceId]);\n  });\n  return style;\n}\n\nfunction notifyVersion(mapboxgl) {\n  var versions = mapboxgl.version.split('.').map(parseFloat);\n  if (versions[0] < 1 && versions[1] < 29) {\n    console.error('MapboxInspect only supports Mapbox GL JS >= v0.29.0. Please upgrade your Mapbox GL JS version.');\n  }\n}\n\nfunction MapboxInspect(options) {\n  if (!(this instanceof MapboxInspect)) {\n    throw new Error('MapboxInspect needs to be called with the new keyword');\n  }\n\n  var popup = null;\n  if (window.mapboxgl) {\n    notifyVersion(window.mapboxgl);\n    popup = new window.mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n    });\n  } else if (!options.popup) {\n    console.error('Mapbox GL JS can not be found. Make sure to include it or pass an initialized MapboxGL Popup to MapboxInspect if you are using moduleis.');\n  }\n\n  this.options = Object.assign({\n    showInspectMap: false,\n    showInspectButton: true,\n    showInspectMapPopup: true,\n    showMapPopup: false,\n    showMapPopupOnHover: true,\n    showInspectMapPopupOnHover: true,\n    blockHoverPopupOnClick: false,\n    backgroundColor: '#fff',\n    assignLayerColor: colors.brightColor,\n    buildInspectStyle: stylegen.generateInspectStyle,\n    renderPopup: renderPopup,\n    popup: popup,\n    selectThreshold: 5,\n    useInspectStyle: true,\n    queryParameters: {},\n    sources: {}\n  }, options);\n\n  this.sources = this.options.sources;\n  this.assignLayerColor = this.options.assignLayerColor;\n  this.toggleInspector = this.toggleInspector.bind(this);\n  this._popup = this.options.popup;\n  this._popupBlocked = false;\n  this._showInspectMap = this.options.showInspectMap;\n  this._onSourceChange = this._onSourceChange.bind(this);\n  this._onMousemove = this._onMousemove.bind(this);\n  this._onStyleChange = this._onStyleChange.bind(this);\n\n  this._originalStyle = null;\n  this._toggle = new InspectButton({\n    show: this.options.showInspectButton,\n    onToggle: this.toggleInspector.bind(this)\n  });\n}\n\nMapboxInspect.prototype.toggleInspector = function () {\n  this._showInspectMap = !this._showInspectMap;\n  this.render();\n};\n\nMapboxInspect.prototype._inspectStyle = function () {\n  var coloredLayers = stylegen.generateColoredLayers(this.sources, this.assignLayerColor);\n  return this.options.buildInspectStyle(this._map.getStyle(), coloredLayers, {\n    backgroundColor: this.options.backgroundColor\n  });\n};\n\nMapboxInspect.prototype.render = function () {\n  if (this._showInspectMap) {\n    if (this.options.useInspectStyle) {\n      this._map.setStyle(fixStyle(markInspectStyle(this._inspectStyle())));\n    }\n    this._toggle.setMapIcon();\n  } else if (this._originalStyle) {\n    if (this._popup) this._popup.remove();\n    if (this.options.useInspectStyle) {\n      this._map.setStyle(fixStyle(this._originalStyle));\n    }\n    this._toggle.setInspectIcon();\n  }\n};\n\nMapboxInspect.prototype._onSourceChange = function () {\n  var sources = this.sources;\n  var map = this._map;\n  var mapStyle = map.getStyle();\n  var mapStyleSourcesNames = Object.keys(mapStyle.sources);\n  var previousSources = Object.assign({}, sources);\n\n  //NOTE: This heavily depends on the internal API of Mapbox GL\n  //so this breaks between Mapbox GL JS releases\n  Object.keys(map.style.sourceCaches).forEach(function (sourceId) {\n    var sourceCache = map.style.sourceCaches[sourceId] || {_source: {}};\n    var layerIds = sourceCache._source.vectorLayerIds;\n    if (layerIds) {\n      sources[sourceId] = layerIds;\n    } else if (sourceCache._source.type === 'geojson') {\n      sources[sourceId] = [];\n    }\n  });\n\n  Object.keys(sources).forEach(function (sourceId) {\n    if (mapStyleSourcesNames.indexOf(sourceId) === -1) {\n      delete sources[sourceId];\n    }\n  });\n\n  if (!isEqual(previousSources, sources) && Object.keys(sources).length > 0) {\n    this.render();\n  }\n};\n\nMapboxInspect.prototype._onStyleChange = function () {\n  var style = this._map.getStyle();\n  if (!isInspectStyle(style)) {\n    this._originalStyle = style;\n  }\n};\n\nMapboxInspect.prototype._onMousemove = function (e) {\n  var queryBox;\n  if (this.options.selectThreshold === 0) {\n    queryBox = e.point;\n  } else {\n    // set a bbox around the pointer\n    queryBox = [\n      [\n        e.point.x - this.options.selectThreshold,\n        e.point.y + this.options.selectThreshold\n      ], // bottom left (SW)\n      [\n        e.point.x + this.options.selectThreshold,\n        e.point.y - this.options.selectThreshold\n      ] // top right (NE)\n    ];\n  }\n\n  var features = this._map.queryRenderedFeatures(queryBox, this.options.queryParameters) || [];\n  this._map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';\n\n  if (this._showInspectMap) {\n    if (!this.options.showInspectMapPopup) return;\n    if (e.type === 'mousemove' && !this.options.showInspectMapPopupOnHover) return;\n    if (e.type === 'click' && this.options.showInspectMapPopupOnHover && this.options.blockHoverPopupOnClick) {\n      this._popupBlocked = !this._popupBlocked;\n    }\n  } else {\n    if (!this.options.showMapPopup) return;\n    if (e.type === 'mousemove' && !this.options.showMapPopupOnHover) return;\n    if (e.type === 'click' && this.options.showMapPopupOnHover && this.options.blockHoverPopupOnClick) {\n      this._popupBlocked = !this._popupBlocked;\n    }\n  }\n\n  if (!this._popupBlocked && this._popup) {\n    if (!features.length) {\n      this._popup.remove();\n    } else {\n      this._popup.setLngLat(e.lngLat);\n\n      var type = typeof this.options.renderPopup(features);\n\n      if (type === 'string') {\n        this._popup.setHTML(this.options.renderPopup(features));\n      } else {\n        this._popup.setDOMContent(this.options.renderPopup(features));\n      }\n\n      this._popup.addTo(this._map);\n    }\n  }\n};\n\nMapboxInspect.prototype.onAdd = function (map) {\n  this._map = map;\n\n  // if sources have already been passed as options\n  // we do not need to figure out the sources ourselves\n  if (Object.keys(this.sources).length === 0) {\n    map.on('tiledata', this._onSourceChange);\n    map.on('sourcedata', this._onSourceChange);\n  }\n\n  map.on('styledata', this._onStyleChange);\n  map.on('load', this._onStyleChange);\n  map.on('mousemove', this._onMousemove);\n  map.on('click', this._onMousemove);\n  return this._toggle.elem;\n};\n\nMapboxInspect.prototype.onRemove = function () {\n  this._map.off('styledata', this._onStyleChange);\n  this._map.off('load', this._onStyleChange);\n  this._map.off('tiledata', this._onSourceChange);\n  this._map.off('sourcedata', this._onSourceChange);\n  this._map.off('mousemove', this._onMousemove);\n  this._map.off('click', this._onMousemove);\n\n  var elem = this._toggle.elem;\n  elem.parentNode.removeChild(elem);\n  this._map = undefined;\n};\n\nmodule.exports = MapboxInspect;\n\n\n//# sourceURL=webpack:///./node_modules/mapbox-gl-inspect/lib/MapboxInspect.js?");

/***/ }),

/***/ "./node_modules/mapbox-gl-inspect/lib/colors.js":
/*!******************************************************!*\
  !*** ./node_modules/mapbox-gl-inspect/lib/colors.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var randomColor = __webpack_require__(/*! randomcolor */ \"./node_modules/randomcolor/randomColor.js\");\n\n/**\n * Assign a color to a unique layer ID and also considering\n * common layer names such as water or wood.\n * @param {string} layerId\n * @return {string} Unique random for the layer ID\n */\nfunction brightColor(layerId, alpha) {\n  var luminosity = 'bright';\n  var hue = null;\n\n  if (/water|ocean|lake|sea|river/.test(layerId)) {\n    hue = 'blue';\n  }\n\n  if (/state|country|place/.test(layerId)) {\n    hue = 'pink';\n  }\n\n  if (/road|highway|transport/.test(layerId)) {\n    hue = 'orange';\n  }\n\n  if (/contour|building/.test(layerId)) {\n    hue = 'monochrome';\n  }\n\n  if (/building/.test(layerId)) {\n    luminosity = 'dark';\n  }\n\n  if (/contour|landuse/.test(layerId)) {\n    hue = 'yellow';\n  }\n\n  if (/wood|forest|park|landcover/.test(layerId)) {\n    hue = 'green';\n  }\n\n  var rgb = randomColor({\n    luminosity: luminosity,\n    hue: hue,\n    seed: layerId,\n    format: 'rgbArray'\n  });\n\n  var rgba = rgb.concat([alpha || 1]);\n  return 'rgba(' + rgba.join(', ') + ')';\n}\n\nexports.brightColor = brightColor;\n\n\n//# sourceURL=webpack:///./node_modules/mapbox-gl-inspect/lib/colors.js?");

/***/ }),

/***/ "./node_modules/mapbox-gl-inspect/lib/renderPopup.js":
/*!***********************************************************!*\
  !*** ./node_modules/mapbox-gl-inspect/lib/renderPopup.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function displayValue(value) {\n  if (typeof value === 'undefined' || value === null) return value;\n  if (value instanceof Date) return value.toLocaleString();\n  if (typeof value === 'object' ||\n          typeof value === 'number' ||\n          typeof value === 'string') return value.toString();\n  return value;\n}\n\nfunction renderProperty(propertyName, property) {\n  return '<div class=\"mapbox-gl-inspect_property\">' +\n    '<div class=\"mapbox-gl-inspect_property-name\">' + propertyName + '</div>' +\n    '<div class=\"mapbox-gl-inspect_property-value\">' + displayValue(property) + '</div>' +\n    '</div>';\n}\n\nfunction renderLayer(layerId) {\n  return '<div class=\"mapbox-gl-inspect_layer\">' + layerId + '</div>';\n}\n\nfunction renderProperties(feature) {\n  var sourceProperty = renderLayer(feature.layer['source-layer'] || feature.layer.source);\n  var typeProperty = renderProperty('$type', feature.geometry.type);\n  var properties = Object.keys(feature.properties).map(function (propertyName) {\n    return renderProperty(propertyName, feature.properties[propertyName]);\n  });\n  return [sourceProperty, typeProperty].concat(properties).join('');\n}\n\nfunction renderFeatures(features) {\n  return features.map(function (ft) {\n    return '<div class=\"mapbox-gl-inspect_feature\">' + renderProperties(ft) + '</div>';\n  }).join('');\n}\n\nfunction renderPopup(features) {\n  return '<div class=\"mapbox-gl-inspect_popup\">' + renderFeatures(features) + '</div>';\n}\n\nmodule.exports = renderPopup;\n\n\n//# sourceURL=webpack:///./node_modules/mapbox-gl-inspect/lib/renderPopup.js?");

/***/ }),

/***/ "./node_modules/mapbox-gl-inspect/lib/stylegen.js":
/*!********************************************************!*\
  !*** ./node_modules/mapbox-gl-inspect/lib/stylegen.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function circleLayer(color, source, vectorLayer) {\n  var layer = {\n    id: [source, vectorLayer, 'circle'].join('_'),\n    source: source,\n    type: 'circle',\n    paint: {\n      'circle-color': color,\n      'circle-radius': 2\n    },\n    filter: ['==', '$type', 'Point']\n  };\n  if (vectorLayer) {\n    layer['source-layer'] = vectorLayer;\n  }\n  return layer;\n}\n\nfunction polygonLayer(color, outlineColor, source, vectorLayer) {\n  var layer = {\n    id: [source, vectorLayer, 'polygon'].join('_'),\n    source: source,\n    type: 'fill',\n    paint: {\n      'fill-color': color,\n      'fill-antialias': true,\n      'fill-outline-color': color\n    },\n    filter: ['==', '$type', 'Polygon']\n  };\n  if (vectorLayer) {\n    layer['source-layer'] = vectorLayer;\n  }\n  return layer;\n}\n\nfunction lineLayer(color, source, vectorLayer) {\n  var layer = {\n    id: [source, vectorLayer, 'line'].join('_'),\n    source: source,\n    layout: {\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    type: 'line',\n    paint: {\n      'line-color': color\n    },\n    filter: ['==', '$type', 'LineString']\n  };\n  if (vectorLayer) {\n    layer['source-layer'] = vectorLayer;\n  }\n  return layer;\n}\n\n/**\n * Generate colored layer styles for the given sources\n * TODO: Improve docs\n * @param {Object} Sources dict containing the vector layer IDs\n * @param {Function} Function to generate a color for a layer\n * @return {array} Array of Mapbox GL layers\n */\nfunction generateColoredLayers(sources, assignLayerColor) {\n  var polyLayers = [];\n  var circleLayers = [];\n  var lineLayers = [];\n\n  function alphaColors(layerId) {\n    var color = assignLayerColor.bind(null, layerId);\n    var obj = {\n      circle: color(0.8),\n      line: color(0.6),\n      polygon: color(0.3),\n      polygonOutline: color(0.6),\n      default: color(1)\n    };\n    return obj;\n  }\n\n  Object.keys(sources).forEach(function (sourceId) {\n    var layers = sources[sourceId];\n\n    if (!layers || layers.length === 0) {\n      var colors = alphaColors(sourceId);\n      circleLayers.push(circleLayer(colors.circle, sourceId));\n      lineLayers.push(lineLayer(colors.line, sourceId));\n      polyLayers.push(polygonLayer(colors.polygon, colors.polygonOutline, sourceId));\n    } else {\n      layers.forEach(function (layerId) {\n        var colors = alphaColors(layerId);\n\n        circleLayers.push(circleLayer(colors.circle, sourceId, layerId));\n        lineLayers.push(lineLayer(colors.line, sourceId, layerId));\n        polyLayers.push(polygonLayer(colors.polygon, colors.polygonOutline, sourceId, layerId));\n      });\n    }\n  });\n\n  return polyLayers.concat(lineLayers).concat(circleLayers);\n}\n\n/**\n * Create inspection style out of the original style and the new colored layers\n * @param {Object} Original map styles\n * @param {array} Array of colored Mapbox GL layers\n * @return {Object} Colored inspect style\n */\nfunction generateInspectStyle(originalMapStyle, coloredLayers, opts) {\n  opts = Object.assign({\n    backgroundColor: '#fff'\n  }, opts);\n\n  var backgroundLayer = {\n    'id': 'background',\n    'type': 'background',\n    'paint': {\n      'background-color': opts.backgroundColor\n    }\n  };\n\n  var sources = {};\n  Object.keys(originalMapStyle.sources).forEach(function (sourceId) {\n    var source = originalMapStyle.sources[sourceId];\n    if (source.type === 'vector' || source.type === 'geojson') {\n      sources[sourceId] = source;\n    }\n  });\n\n  return Object.assign(originalMapStyle, {\n    layers: [backgroundLayer].concat(coloredLayers),\n    soources: sources\n  });\n}\n\nexports.polygonLayer = polygonLayer;\nexports.lineLayer = lineLayer;\nexports.circleLayer = circleLayer;\nexports.generateInspectStyle = generateInspectStyle;\nexports.generateColoredLayers = generateColoredLayers;\n\n\n//# sourceURL=webpack:///./node_modules/mapbox-gl-inspect/lib/stylegen.js?");

/***/ }),

/***/ "./node_modules/md5/md5.js":
/*!*********************************!*\
  !*** ./node_modules/md5/md5.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function(){\r\n  var crypt = __webpack_require__(/*! crypt */ \"./node_modules/crypt/crypt.js\"),\r\n      utf8 = __webpack_require__(/*! charenc */ \"./node_modules/charenc/charenc.js\").utf8,\r\n      isBuffer = __webpack_require__(/*! is-buffer */ \"./node_modules/is-buffer/index.js\"),\r\n      bin = __webpack_require__(/*! charenc */ \"./node_modules/charenc/charenc.js\").bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message))\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n\n\n//# sourceURL=webpack:///./node_modules/md5/md5.js?");

/***/ }),

/***/ "./node_modules/nouislider/distribute/nouislider.js":
/*!**********************************************************!*\
  !*** ./node_modules/nouislider/distribute/nouislider.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! nouislider - 12.1.0 - 10/25/2018 */\n(function(factory) {\r\n    if (true) {\r\n        // AMD. Register as an anonymous module.\r\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else {}\r\n})(function() {\r\n    \"use strict\";\r\n\r\n    var VERSION = \"12.1.0\";\r\n\r\n    function isValidFormatter(entry) {\r\n        return typeof entry === \"object\" && typeof entry.to === \"function\" && typeof entry.from === \"function\";\r\n    }\r\n\r\n    function removeElement(el) {\r\n        el.parentElement.removeChild(el);\r\n    }\r\n\r\n    function isSet(value) {\r\n        return value !== null && value !== undefined;\r\n    }\r\n\r\n    // Bindable version\r\n    function preventDefault(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    // Removes duplicates from an array.\r\n    function unique(array) {\r\n        return array.filter(function(a) {\r\n            return !this[a] ? (this[a] = true) : false;\r\n        }, {});\r\n    }\r\n\r\n    // Round a value to the closest 'to'.\r\n    function closest(value, to) {\r\n        return Math.round(value / to) * to;\r\n    }\r\n\r\n    // Current position of an element relative to the document.\r\n    function offset(elem, orientation) {\r\n        var rect = elem.getBoundingClientRect();\r\n        var doc = elem.ownerDocument;\r\n        var docElem = doc.documentElement;\r\n        var pageOffset = getPageOffset(doc);\r\n\r\n        // getBoundingClientRect contains left scroll in Chrome on Android.\r\n        // I haven't found a feature detection that proves this. Worst case\r\n        // scenario on mis-match: the 'tap' feature on horizontal sliders breaks.\r\n        if (/webkit.*Chrome.*Mobile/i.test(navigator.userAgent)) {\r\n            pageOffset.x = 0;\r\n        }\r\n\r\n        return orientation\r\n            ? rect.top + pageOffset.y - docElem.clientTop\r\n            : rect.left + pageOffset.x - docElem.clientLeft;\r\n    }\r\n\r\n    // Checks whether a value is numerical.\r\n    function isNumeric(a) {\r\n        return typeof a === \"number\" && !isNaN(a) && isFinite(a);\r\n    }\r\n\r\n    // Sets a class and removes it after [duration] ms.\r\n    function addClassFor(element, className, duration) {\r\n        if (duration > 0) {\r\n            addClass(element, className);\r\n            setTimeout(function() {\r\n                removeClass(element, className);\r\n            }, duration);\r\n        }\r\n    }\r\n\r\n    // Limits a value to 0 - 100\r\n    function limit(a) {\r\n        return Math.max(Math.min(a, 100), 0);\r\n    }\r\n\r\n    // Wraps a variable as an array, if it isn't one yet.\r\n    // Note that an input array is returned by reference!\r\n    function asArray(a) {\r\n        return Array.isArray(a) ? a : [a];\r\n    }\r\n\r\n    // Counts decimals\r\n    function countDecimals(numStr) {\r\n        numStr = String(numStr);\r\n        var pieces = numStr.split(\".\");\r\n        return pieces.length > 1 ? pieces[1].length : 0;\r\n    }\r\n\r\n    // http://youmightnotneedjquery.com/#add_class\r\n    function addClass(el, className) {\r\n        if (el.classList) {\r\n            el.classList.add(className);\r\n        } else {\r\n            el.className += \" \" + className;\r\n        }\r\n    }\r\n\r\n    // http://youmightnotneedjquery.com/#remove_class\r\n    function removeClass(el, className) {\r\n        if (el.classList) {\r\n            el.classList.remove(className);\r\n        } else {\r\n            el.className = el.className.replace(\r\n                new RegExp(\"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\", \"gi\"),\r\n                \" \"\r\n            );\r\n        }\r\n    }\r\n\r\n    // https://plainjs.com/javascript/attributes/adding-removing-and-testing-for-classes-9/\r\n    function hasClass(el, className) {\r\n        return el.classList\r\n            ? el.classList.contains(className)\r\n            : new RegExp(\"\\\\b\" + className + \"\\\\b\").test(el.className);\r\n    }\r\n\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY#Notes\r\n    function getPageOffset(doc) {\r\n        var supportPageOffset = window.pageXOffset !== undefined;\r\n        var isCSS1Compat = (doc.compatMode || \"\") === \"CSS1Compat\";\r\n        var x = supportPageOffset\r\n            ? window.pageXOffset\r\n            : isCSS1Compat\r\n                ? doc.documentElement.scrollLeft\r\n                : doc.body.scrollLeft;\r\n        var y = supportPageOffset\r\n            ? window.pageYOffset\r\n            : isCSS1Compat\r\n                ? doc.documentElement.scrollTop\r\n                : doc.body.scrollTop;\r\n\r\n        return {\r\n            x: x,\r\n            y: y\r\n        };\r\n    }\r\n\r\n    // we provide a function to compute constants instead\r\n    // of accessing window.* as soon as the module needs it\r\n    // so that we do not compute anything if not needed\r\n    function getActions() {\r\n        // Determine the events to bind. IE11 implements pointerEvents without\r\n        // a prefix, which breaks compatibility with the IE10 implementation.\r\n        return window.navigator.pointerEnabled\r\n            ? {\r\n                  start: \"pointerdown\",\r\n                  move: \"pointermove\",\r\n                  end: \"pointerup\"\r\n              }\r\n            : window.navigator.msPointerEnabled\r\n                ? {\r\n                      start: \"MSPointerDown\",\r\n                      move: \"MSPointerMove\",\r\n                      end: \"MSPointerUp\"\r\n                  }\r\n                : {\r\n                      start: \"mousedown touchstart\",\r\n                      move: \"mousemove touchmove\",\r\n                      end: \"mouseup touchend\"\r\n                  };\r\n    }\r\n\r\n    // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n    // Issue #785\r\n    function getSupportsPassive() {\r\n        var supportsPassive = false;\r\n\r\n        /* eslint-disable */\r\n        try {\r\n            var opts = Object.defineProperty({}, \"passive\", {\r\n                get: function() {\r\n                    supportsPassive = true;\r\n                }\r\n            });\r\n\r\n            window.addEventListener(\"test\", null, opts);\r\n        } catch (e) {}\r\n        /* eslint-enable */\r\n\r\n        return supportsPassive;\r\n    }\r\n\r\n    function getSupportsTouchActionNone() {\r\n        return window.CSS && CSS.supports && CSS.supports(\"touch-action\", \"none\");\r\n    }\r\n\r\n    // Value calculation\r\n\r\n    // Determine the size of a sub-range in relation to a full range.\r\n    function subRangeRatio(pa, pb) {\r\n        return 100 / (pb - pa);\r\n    }\r\n\r\n    // (percentage) How many percent is this value of this range?\r\n    function fromPercentage(range, value) {\r\n        return (value * 100) / (range[1] - range[0]);\r\n    }\r\n\r\n    // (percentage) Where is this value on this range?\r\n    function toPercentage(range, value) {\r\n        return fromPercentage(range, range[0] < 0 ? value + Math.abs(range[0]) : value - range[0]);\r\n    }\r\n\r\n    // (value) How much is this percentage on this range?\r\n    function isPercentage(range, value) {\r\n        return (value * (range[1] - range[0])) / 100 + range[0];\r\n    }\r\n\r\n    // Range conversion\r\n\r\n    function getJ(value, arr) {\r\n        var j = 1;\r\n\r\n        while (value >= arr[j]) {\r\n            j += 1;\r\n        }\r\n\r\n        return j;\r\n    }\r\n\r\n    // (percentage) Input a value, find where, on a scale of 0-100, it applies.\r\n    function toStepping(xVal, xPct, value) {\r\n        if (value >= xVal.slice(-1)[0]) {\r\n            return 100;\r\n        }\r\n\r\n        var j = getJ(value, xVal);\r\n        var va = xVal[j - 1];\r\n        var vb = xVal[j];\r\n        var pa = xPct[j - 1];\r\n        var pb = xPct[j];\r\n\r\n        return pa + toPercentage([va, vb], value) / subRangeRatio(pa, pb);\r\n    }\r\n\r\n    // (value) Input a percentage, find where it is on the specified range.\r\n    function fromStepping(xVal, xPct, value) {\r\n        // There is no range group that fits 100\r\n        if (value >= 100) {\r\n            return xVal.slice(-1)[0];\r\n        }\r\n\r\n        var j = getJ(value, xPct);\r\n        var va = xVal[j - 1];\r\n        var vb = xVal[j];\r\n        var pa = xPct[j - 1];\r\n        var pb = xPct[j];\r\n\r\n        return isPercentage([va, vb], (value - pa) * subRangeRatio(pa, pb));\r\n    }\r\n\r\n    // (percentage) Get the step that applies at a certain value.\r\n    function getStep(xPct, xSteps, snap, value) {\r\n        if (value === 100) {\r\n            return value;\r\n        }\r\n\r\n        var j = getJ(value, xPct);\r\n        var a = xPct[j - 1];\r\n        var b = xPct[j];\r\n\r\n        // If 'snap' is set, steps are used as fixed points on the slider.\r\n        if (snap) {\r\n            // Find the closest position, a or b.\r\n            if (value - a > (b - a) / 2) {\r\n                return b;\r\n            }\r\n\r\n            return a;\r\n        }\r\n\r\n        if (!xSteps[j - 1]) {\r\n            return value;\r\n        }\r\n\r\n        return xPct[j - 1] + closest(value - xPct[j - 1], xSteps[j - 1]);\r\n    }\r\n\r\n    // Entry parsing\r\n\r\n    function handleEntryPoint(index, value, that) {\r\n        var percentage;\r\n\r\n        // Wrap numerical input in an array.\r\n        if (typeof value === \"number\") {\r\n            value = [value];\r\n        }\r\n\r\n        // Reject any invalid input, by testing whether value is an array.\r\n        if (!Array.isArray(value)) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'range' contains invalid value.\");\r\n        }\r\n\r\n        // Covert min/max syntax to 0 and 100.\r\n        if (index === \"min\") {\r\n            percentage = 0;\r\n        } else if (index === \"max\") {\r\n            percentage = 100;\r\n        } else {\r\n            percentage = parseFloat(index);\r\n        }\r\n\r\n        // Check for correct input.\r\n        if (!isNumeric(percentage) || !isNumeric(value[0])) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'range' value isn't numeric.\");\r\n        }\r\n\r\n        // Store values.\r\n        that.xPct.push(percentage);\r\n        that.xVal.push(value[0]);\r\n\r\n        // NaN will evaluate to false too, but to keep\r\n        // logging clear, set step explicitly. Make sure\r\n        // not to override the 'step' setting with false.\r\n        if (!percentage) {\r\n            if (!isNaN(value[1])) {\r\n                that.xSteps[0] = value[1];\r\n            }\r\n        } else {\r\n            that.xSteps.push(isNaN(value[1]) ? false : value[1]);\r\n        }\r\n\r\n        that.xHighestCompleteStep.push(0);\r\n    }\r\n\r\n    function handleStepPoint(i, n, that) {\r\n        // Ignore 'false' stepping.\r\n        if (!n) {\r\n            return true;\r\n        }\r\n\r\n        // Factor to range ratio\r\n        that.xSteps[i] =\r\n            fromPercentage([that.xVal[i], that.xVal[i + 1]], n) / subRangeRatio(that.xPct[i], that.xPct[i + 1]);\r\n\r\n        var totalSteps = (that.xVal[i + 1] - that.xVal[i]) / that.xNumSteps[i];\r\n        var highestStep = Math.ceil(Number(totalSteps.toFixed(3)) - 1);\r\n        var step = that.xVal[i] + that.xNumSteps[i] * highestStep;\r\n\r\n        that.xHighestCompleteStep[i] = step;\r\n    }\r\n\r\n    // Interface\r\n\r\n    function Spectrum(entry, snap, singleStep) {\r\n        this.xPct = [];\r\n        this.xVal = [];\r\n        this.xSteps = [singleStep || false];\r\n        this.xNumSteps = [false];\r\n        this.xHighestCompleteStep = [];\r\n\r\n        this.snap = snap;\r\n\r\n        var index;\r\n        var ordered = []; // [0, 'min'], [1, '50%'], [2, 'max']\r\n\r\n        // Map the object keys to an array.\r\n        for (index in entry) {\r\n            if (entry.hasOwnProperty(index)) {\r\n                ordered.push([entry[index], index]);\r\n            }\r\n        }\r\n\r\n        // Sort all entries by value (numeric sort).\r\n        if (ordered.length && typeof ordered[0][0] === \"object\") {\r\n            ordered.sort(function(a, b) {\r\n                return a[0][0] - b[0][0];\r\n            });\r\n        } else {\r\n            ordered.sort(function(a, b) {\r\n                return a[0] - b[0];\r\n            });\r\n        }\r\n\r\n        // Convert all entries to subranges.\r\n        for (index = 0; index < ordered.length; index++) {\r\n            handleEntryPoint(ordered[index][1], ordered[index][0], this);\r\n        }\r\n\r\n        // Store the actual step values.\r\n        // xSteps is sorted in the same order as xPct and xVal.\r\n        this.xNumSteps = this.xSteps.slice(0);\r\n\r\n        // Convert all numeric steps to the percentage of the subrange they represent.\r\n        for (index = 0; index < this.xNumSteps.length; index++) {\r\n            handleStepPoint(index, this.xNumSteps[index], this);\r\n        }\r\n    }\r\n\r\n    Spectrum.prototype.getMargin = function(value) {\r\n        var step = this.xNumSteps[0];\r\n\r\n        if (step && (value / step) % 1 !== 0) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'limit', 'margin' and 'padding' must be divisible by step.\");\r\n        }\r\n\r\n        return this.xPct.length === 2 ? fromPercentage(this.xVal, value) : false;\r\n    };\r\n\r\n    Spectrum.prototype.toStepping = function(value) {\r\n        value = toStepping(this.xVal, this.xPct, value);\r\n\r\n        return value;\r\n    };\r\n\r\n    Spectrum.prototype.fromStepping = function(value) {\r\n        return fromStepping(this.xVal, this.xPct, value);\r\n    };\r\n\r\n    Spectrum.prototype.getStep = function(value) {\r\n        value = getStep(this.xPct, this.xSteps, this.snap, value);\r\n\r\n        return value;\r\n    };\r\n\r\n    Spectrum.prototype.getNearbySteps = function(value) {\r\n        var j = getJ(value, this.xPct);\r\n\r\n        return {\r\n            stepBefore: {\r\n                startValue: this.xVal[j - 2],\r\n                step: this.xNumSteps[j - 2],\r\n                highestStep: this.xHighestCompleteStep[j - 2]\r\n            },\r\n            thisStep: {\r\n                startValue: this.xVal[j - 1],\r\n                step: this.xNumSteps[j - 1],\r\n                highestStep: this.xHighestCompleteStep[j - 1]\r\n            },\r\n            stepAfter: {\r\n                startValue: this.xVal[j],\r\n                step: this.xNumSteps[j],\r\n                highestStep: this.xHighestCompleteStep[j]\r\n            }\r\n        };\r\n    };\r\n\r\n    Spectrum.prototype.countStepDecimals = function() {\r\n        var stepDecimals = this.xNumSteps.map(countDecimals);\r\n        return Math.max.apply(null, stepDecimals);\r\n    };\r\n\r\n    // Outside testing\r\n    Spectrum.prototype.convert = function(value) {\r\n        return this.getStep(this.toStepping(value));\r\n    };\r\n\r\n    /*\tEvery input option is tested and parsed. This'll prevent\r\n        endless validation in internal methods. These tests are\r\n        structured with an item for every option available. An\r\n        option can be marked as required by setting the 'r' flag.\r\n        The testing function is provided with three arguments:\r\n            - The provided value for the option;\r\n            - A reference to the options object;\r\n            - The name for the option;\r\n\r\n        The testing function returns false when an error is detected,\r\n        or true when everything is OK. It can also modify the option\r\n        object, to make sure all values can be correctly looped elsewhere. */\r\n\r\n    var defaultFormatter = {\r\n        to: function(value) {\r\n            return value !== undefined && value.toFixed(2);\r\n        },\r\n        from: Number\r\n    };\r\n\r\n    function validateFormat(entry) {\r\n        // Any object with a to and from method is supported.\r\n        if (isValidFormatter(entry)) {\r\n            return true;\r\n        }\r\n\r\n        throw new Error(\"noUiSlider (\" + VERSION + \"): 'format' requires 'to' and 'from' methods.\");\r\n    }\r\n\r\n    function testStep(parsed, entry) {\r\n        if (!isNumeric(entry)) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'step' is not numeric.\");\r\n        }\r\n\r\n        // The step option can still be used to set stepping\r\n        // for linear sliders. Overwritten if set in 'range'.\r\n        parsed.singleStep = entry;\r\n    }\r\n\r\n    function testRange(parsed, entry) {\r\n        // Filter incorrect input.\r\n        if (typeof entry !== \"object\" || Array.isArray(entry)) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'range' is not an object.\");\r\n        }\r\n\r\n        // Catch missing start or end.\r\n        if (entry.min === undefined || entry.max === undefined) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): Missing 'min' or 'max' in 'range'.\");\r\n        }\r\n\r\n        // Catch equal start or end.\r\n        if (entry.min === entry.max) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'range' 'min' and 'max' cannot be equal.\");\r\n        }\r\n\r\n        parsed.spectrum = new Spectrum(entry, parsed.snap, parsed.singleStep);\r\n    }\r\n\r\n    function testStart(parsed, entry) {\r\n        entry = asArray(entry);\r\n\r\n        // Validate input. Values aren't tested, as the public .val method\r\n        // will always provide a valid location.\r\n        if (!Array.isArray(entry) || !entry.length) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'start' option is incorrect.\");\r\n        }\r\n\r\n        // Store the number of handles.\r\n        parsed.handles = entry.length;\r\n\r\n        // When the slider is initialized, the .val method will\r\n        // be called with the start options.\r\n        parsed.start = entry;\r\n    }\r\n\r\n    function testSnap(parsed, entry) {\r\n        // Enforce 100% stepping within subranges.\r\n        parsed.snap = entry;\r\n\r\n        if (typeof entry !== \"boolean\") {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'snap' option must be a boolean.\");\r\n        }\r\n    }\r\n\r\n    function testAnimate(parsed, entry) {\r\n        // Enforce 100% stepping within subranges.\r\n        parsed.animate = entry;\r\n\r\n        if (typeof entry !== \"boolean\") {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'animate' option must be a boolean.\");\r\n        }\r\n    }\r\n\r\n    function testAnimationDuration(parsed, entry) {\r\n        parsed.animationDuration = entry;\r\n\r\n        if (typeof entry !== \"number\") {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'animationDuration' option must be a number.\");\r\n        }\r\n    }\r\n\r\n    function testConnect(parsed, entry) {\r\n        var connect = [false];\r\n        var i;\r\n\r\n        // Map legacy options\r\n        if (entry === \"lower\") {\r\n            entry = [true, false];\r\n        } else if (entry === \"upper\") {\r\n            entry = [false, true];\r\n        }\r\n\r\n        // Handle boolean options\r\n        if (entry === true || entry === false) {\r\n            for (i = 1; i < parsed.handles; i++) {\r\n                connect.push(entry);\r\n            }\r\n\r\n            connect.push(false);\r\n        }\r\n\r\n        // Reject invalid input\r\n        else if (!Array.isArray(entry) || !entry.length || entry.length !== parsed.handles + 1) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'connect' option doesn't match handle count.\");\r\n        } else {\r\n            connect = entry;\r\n        }\r\n\r\n        parsed.connect = connect;\r\n    }\r\n\r\n    function testOrientation(parsed, entry) {\r\n        // Set orientation to an a numerical value for easy\r\n        // array selection.\r\n        switch (entry) {\r\n            case \"horizontal\":\r\n                parsed.ort = 0;\r\n                break;\r\n            case \"vertical\":\r\n                parsed.ort = 1;\r\n                break;\r\n            default:\r\n                throw new Error(\"noUiSlider (\" + VERSION + \"): 'orientation' option is invalid.\");\r\n        }\r\n    }\r\n\r\n    function testMargin(parsed, entry) {\r\n        if (!isNumeric(entry)) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'margin' option must be numeric.\");\r\n        }\r\n\r\n        // Issue #582\r\n        if (entry === 0) {\r\n            return;\r\n        }\r\n\r\n        parsed.margin = parsed.spectrum.getMargin(entry);\r\n\r\n        if (!parsed.margin) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'margin' option is only supported on linear sliders.\");\r\n        }\r\n    }\r\n\r\n    function testLimit(parsed, entry) {\r\n        if (!isNumeric(entry)) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'limit' option must be numeric.\");\r\n        }\r\n\r\n        parsed.limit = parsed.spectrum.getMargin(entry);\r\n\r\n        if (!parsed.limit || parsed.handles < 2) {\r\n            throw new Error(\r\n                \"noUiSlider (\" +\r\n                    VERSION +\r\n                    \"): 'limit' option is only supported on linear sliders with 2 or more handles.\"\r\n            );\r\n        }\r\n    }\r\n\r\n    function testPadding(parsed, entry) {\r\n        if (!isNumeric(entry) && !Array.isArray(entry)) {\r\n            throw new Error(\r\n                \"noUiSlider (\" + VERSION + \"): 'padding' option must be numeric or array of exactly 2 numbers.\"\r\n            );\r\n        }\r\n\r\n        if (Array.isArray(entry) && !(entry.length === 2 || isNumeric(entry[0]) || isNumeric(entry[1]))) {\r\n            throw new Error(\r\n                \"noUiSlider (\" + VERSION + \"): 'padding' option must be numeric or array of exactly 2 numbers.\"\r\n            );\r\n        }\r\n\r\n        if (entry === 0) {\r\n            return;\r\n        }\r\n\r\n        if (!Array.isArray(entry)) {\r\n            entry = [entry, entry];\r\n        }\r\n\r\n        // 'getMargin' returns false for invalid values.\r\n        parsed.padding = [parsed.spectrum.getMargin(entry[0]), parsed.spectrum.getMargin(entry[1])];\r\n\r\n        if (parsed.padding[0] === false || parsed.padding[1] === false) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'padding' option is only supported on linear sliders.\");\r\n        }\r\n\r\n        if (parsed.padding[0] < 0 || parsed.padding[1] < 0) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'padding' option must be a positive number(s).\");\r\n        }\r\n\r\n        if (parsed.padding[0] + parsed.padding[1] >= 100) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'padding' option must not exceed 100% of the range.\");\r\n        }\r\n    }\r\n\r\n    function testDirection(parsed, entry) {\r\n        // Set direction as a numerical value for easy parsing.\r\n        // Invert connection for RTL sliders, so that the proper\r\n        // handles get the connect/background classes.\r\n        switch (entry) {\r\n            case \"ltr\":\r\n                parsed.dir = 0;\r\n                break;\r\n            case \"rtl\":\r\n                parsed.dir = 1;\r\n                break;\r\n            default:\r\n                throw new Error(\"noUiSlider (\" + VERSION + \"): 'direction' option was not recognized.\");\r\n        }\r\n    }\r\n\r\n    function testBehaviour(parsed, entry) {\r\n        // Make sure the input is a string.\r\n        if (typeof entry !== \"string\") {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'behaviour' must be a string containing options.\");\r\n        }\r\n\r\n        // Check if the string contains any keywords.\r\n        // None are required.\r\n        var tap = entry.indexOf(\"tap\") >= 0;\r\n        var drag = entry.indexOf(\"drag\") >= 0;\r\n        var fixed = entry.indexOf(\"fixed\") >= 0;\r\n        var snap = entry.indexOf(\"snap\") >= 0;\r\n        var hover = entry.indexOf(\"hover\") >= 0;\r\n        var unconstrained = entry.indexOf(\"unconstrained\") >= 0;\r\n\r\n        if (fixed) {\r\n            if (parsed.handles !== 2) {\r\n                throw new Error(\"noUiSlider (\" + VERSION + \"): 'fixed' behaviour must be used with 2 handles\");\r\n            }\r\n\r\n            // Use margin to enforce fixed state\r\n            testMargin(parsed, parsed.start[1] - parsed.start[0]);\r\n        }\r\n\r\n        if (unconstrained && (parsed.margin || parsed.limit)) {\r\n            throw new Error(\r\n                \"noUiSlider (\" + VERSION + \"): 'unconstrained' behaviour cannot be used with margin or limit\"\r\n            );\r\n        }\r\n\r\n        parsed.events = {\r\n            tap: tap || snap,\r\n            drag: drag,\r\n            fixed: fixed,\r\n            snap: snap,\r\n            hover: hover,\r\n            unconstrained: unconstrained\r\n        };\r\n    }\r\n\r\n    function testTooltips(parsed, entry) {\r\n        if (entry === false) {\r\n            return;\r\n        }\r\n\r\n        if (entry === true) {\r\n            parsed.tooltips = [];\r\n\r\n            for (var i = 0; i < parsed.handles; i++) {\r\n                parsed.tooltips.push(true);\r\n            }\r\n        } else {\r\n            parsed.tooltips = asArray(entry);\r\n\r\n            if (parsed.tooltips.length !== parsed.handles) {\r\n                throw new Error(\"noUiSlider (\" + VERSION + \"): must pass a formatter for all handles.\");\r\n            }\r\n\r\n            parsed.tooltips.forEach(function(formatter) {\r\n                if (\r\n                    typeof formatter !== \"boolean\" &&\r\n                    (typeof formatter !== \"object\" || typeof formatter.to !== \"function\")\r\n                ) {\r\n                    throw new Error(\"noUiSlider (\" + VERSION + \"): 'tooltips' must be passed a formatter or 'false'.\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function testAriaFormat(parsed, entry) {\r\n        parsed.ariaFormat = entry;\r\n        validateFormat(entry);\r\n    }\r\n\r\n    function testFormat(parsed, entry) {\r\n        parsed.format = entry;\r\n        validateFormat(entry);\r\n    }\r\n\r\n    function testKeyboardSupport(parsed, entry) {\r\n        parsed.keyboardSupport = entry;\r\n\r\n        if (typeof entry !== \"boolean\") {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'keyboardSupport' option must be a boolean.\");\r\n        }\r\n    }\r\n\r\n    function testDocumentElement(parsed, entry) {\r\n        // This is an advanced option. Passed values are used without validation.\r\n        parsed.documentElement = entry;\r\n    }\r\n\r\n    function testCssPrefix(parsed, entry) {\r\n        if (typeof entry !== \"string\" && entry !== false) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'cssPrefix' must be a string or `false`.\");\r\n        }\r\n\r\n        parsed.cssPrefix = entry;\r\n    }\r\n\r\n    function testCssClasses(parsed, entry) {\r\n        if (typeof entry !== \"object\") {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): 'cssClasses' must be an object.\");\r\n        }\r\n\r\n        if (typeof parsed.cssPrefix === \"string\") {\r\n            parsed.cssClasses = {};\r\n\r\n            for (var key in entry) {\r\n                if (!entry.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n\r\n                parsed.cssClasses[key] = parsed.cssPrefix + entry[key];\r\n            }\r\n        } else {\r\n            parsed.cssClasses = entry;\r\n        }\r\n    }\r\n\r\n    // Test all developer settings and parse to assumption-safe values.\r\n    function testOptions(options) {\r\n        // To prove a fix for #537, freeze options here.\r\n        // If the object is modified, an error will be thrown.\r\n        // Object.freeze(options);\r\n\r\n        var parsed = {\r\n            margin: 0,\r\n            limit: 0,\r\n            padding: 0,\r\n            animate: true,\r\n            animationDuration: 300,\r\n            ariaFormat: defaultFormatter,\r\n            format: defaultFormatter\r\n        };\r\n\r\n        // Tests are executed in the order they are presented here.\r\n        var tests = {\r\n            step: { r: false, t: testStep },\r\n            start: { r: true, t: testStart },\r\n            connect: { r: true, t: testConnect },\r\n            direction: { r: true, t: testDirection },\r\n            snap: { r: false, t: testSnap },\r\n            animate: { r: false, t: testAnimate },\r\n            animationDuration: { r: false, t: testAnimationDuration },\r\n            range: { r: true, t: testRange },\r\n            orientation: { r: false, t: testOrientation },\r\n            margin: { r: false, t: testMargin },\r\n            limit: { r: false, t: testLimit },\r\n            padding: { r: false, t: testPadding },\r\n            behaviour: { r: true, t: testBehaviour },\r\n            ariaFormat: { r: false, t: testAriaFormat },\r\n            format: { r: false, t: testFormat },\r\n            tooltips: { r: false, t: testTooltips },\r\n            keyboardSupport: { r: true, t: testKeyboardSupport },\r\n            documentElement: { r: false, t: testDocumentElement },\r\n            cssPrefix: { r: true, t: testCssPrefix },\r\n            cssClasses: { r: true, t: testCssClasses }\r\n        };\r\n\r\n        var defaults = {\r\n            connect: false,\r\n            direction: \"ltr\",\r\n            behaviour: \"tap\",\r\n            orientation: \"horizontal\",\r\n            keyboardSupport: true,\r\n            cssPrefix: \"noUi-\",\r\n            cssClasses: {\r\n                target: \"target\",\r\n                base: \"base\",\r\n                origin: \"origin\",\r\n                handle: \"handle\",\r\n                handleLower: \"handle-lower\",\r\n                handleUpper: \"handle-upper\",\r\n                horizontal: \"horizontal\",\r\n                vertical: \"vertical\",\r\n                background: \"background\",\r\n                connect: \"connect\",\r\n                connects: \"connects\",\r\n                ltr: \"ltr\",\r\n                rtl: \"rtl\",\r\n                draggable: \"draggable\",\r\n                drag: \"state-drag\",\r\n                tap: \"state-tap\",\r\n                active: \"active\",\r\n                tooltip: \"tooltip\",\r\n                pips: \"pips\",\r\n                pipsHorizontal: \"pips-horizontal\",\r\n                pipsVertical: \"pips-vertical\",\r\n                marker: \"marker\",\r\n                markerHorizontal: \"marker-horizontal\",\r\n                markerVertical: \"marker-vertical\",\r\n                markerNormal: \"marker-normal\",\r\n                markerLarge: \"marker-large\",\r\n                markerSub: \"marker-sub\",\r\n                value: \"value\",\r\n                valueHorizontal: \"value-horizontal\",\r\n                valueVertical: \"value-vertical\",\r\n                valueNormal: \"value-normal\",\r\n                valueLarge: \"value-large\",\r\n                valueSub: \"value-sub\"\r\n            }\r\n        };\r\n\r\n        // AriaFormat defaults to regular format, if any.\r\n        if (options.format && !options.ariaFormat) {\r\n            options.ariaFormat = options.format;\r\n        }\r\n\r\n        // Run all options through a testing mechanism to ensure correct\r\n        // input. It should be noted that options might get modified to\r\n        // be handled properly. E.g. wrapping integers in arrays.\r\n        Object.keys(tests).forEach(function(name) {\r\n            // If the option isn't set, but it is required, throw an error.\r\n            if (!isSet(options[name]) && defaults[name] === undefined) {\r\n                if (tests[name].r) {\r\n                    throw new Error(\"noUiSlider (\" + VERSION + \"): '\" + name + \"' is required.\");\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            tests[name].t(parsed, !isSet(options[name]) ? defaults[name] : options[name]);\r\n        });\r\n\r\n        // Forward pips options\r\n        parsed.pips = options.pips;\r\n\r\n        // All recent browsers accept unprefixed transform.\r\n        // We need -ms- for IE9 and -webkit- for older Android;\r\n        // Assume use of -webkit- if unprefixed and -ms- are not supported.\r\n        // https://caniuse.com/#feat=transforms2d\r\n        var d = document.createElement(\"div\");\r\n        var msPrefix = d.style.msTransform !== undefined;\r\n        var noPrefix = d.style.transform !== undefined;\r\n\r\n        parsed.transformRule = noPrefix ? \"transform\" : msPrefix ? \"msTransform\" : \"webkitTransform\";\r\n\r\n        // Pips don't move, so we can place them using left/top.\r\n        var styles = [[\"left\", \"top\"], [\"right\", \"bottom\"]];\r\n\r\n        parsed.style = styles[parsed.dir][parsed.ort];\r\n\r\n        return parsed;\r\n    }\r\n\r\n    function scope(target, options, originalOptions) {\r\n        var actions = getActions();\r\n        var supportsTouchActionNone = getSupportsTouchActionNone();\r\n        var supportsPassive = supportsTouchActionNone && getSupportsPassive();\r\n\r\n        // All variables local to 'scope' are prefixed with 'scope_'\r\n        var scope_Target = target;\r\n        var scope_Locations = [];\r\n        var scope_Base;\r\n        var scope_Handles;\r\n        var scope_HandleNumbers = [];\r\n        var scope_ActiveHandlesCount = 0;\r\n        var scope_Connects;\r\n        var scope_Spectrum = options.spectrum;\r\n        var scope_Values = [];\r\n        var scope_Events = {};\r\n        var scope_Self;\r\n        var scope_Pips;\r\n        var scope_Document = target.ownerDocument;\r\n        var scope_DocumentElement = options.documentElement || scope_Document.documentElement;\r\n        var scope_Body = scope_Document.body;\r\n\r\n        // Pips constants\r\n        var PIPS_NONE = -1;\r\n        var PIPS_NO_VALUE = 0;\r\n        var PIPS_LARGE_VALUE = 1;\r\n        var PIPS_SMALL_VALUE = 2;\r\n\r\n        // For horizontal sliders in standard ltr documents,\r\n        // make .noUi-origin overflow to the left so the document doesn't scroll.\r\n        var scope_DirOffset = scope_Document.dir === \"rtl\" || options.ort === 1 ? 0 : 100;\r\n\r\n        // Creates a node, adds it to target, returns the new node.\r\n        function addNodeTo(addTarget, className) {\r\n            var div = scope_Document.createElement(\"div\");\r\n\r\n            if (className) {\r\n                addClass(div, className);\r\n            }\r\n\r\n            addTarget.appendChild(div);\r\n\r\n            return div;\r\n        }\r\n\r\n        // Append a origin to the base\r\n        function addOrigin(base, handleNumber) {\r\n            var origin = addNodeTo(base, options.cssClasses.origin);\r\n            var handle = addNodeTo(origin, options.cssClasses.handle);\r\n\r\n            handle.setAttribute(\"data-handle\", handleNumber);\r\n\r\n            if (options.keyboardSupport) {\r\n                // https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                // 0 = focusable and reachable\r\n                handle.setAttribute(\"tabindex\", \"0\");\r\n            }\r\n\r\n            handle.setAttribute(\"role\", \"slider\");\r\n            handle.setAttribute(\"aria-orientation\", options.ort ? \"vertical\" : \"horizontal\");\r\n\r\n            if (handleNumber === 0) {\r\n                addClass(handle, options.cssClasses.handleLower);\r\n            } else if (handleNumber === options.handles - 1) {\r\n                addClass(handle, options.cssClasses.handleUpper);\r\n            }\r\n\r\n            return origin;\r\n        }\r\n\r\n        // Insert nodes for connect elements\r\n        function addConnect(base, add) {\r\n            if (!add) {\r\n                return false;\r\n            }\r\n\r\n            return addNodeTo(base, options.cssClasses.connect);\r\n        }\r\n\r\n        // Add handles to the slider base.\r\n        function addElements(connectOptions, base) {\r\n            var connectBase = addNodeTo(base, options.cssClasses.connects);\r\n\r\n            scope_Handles = [];\r\n            scope_Connects = [];\r\n\r\n            scope_Connects.push(addConnect(connectBase, connectOptions[0]));\r\n\r\n            // [::::O====O====O====]\r\n            // connectOptions = [0, 1, 1, 1]\r\n\r\n            for (var i = 0; i < options.handles; i++) {\r\n                // Keep a list of all added handles.\r\n                scope_Handles.push(addOrigin(base, i));\r\n                scope_HandleNumbers[i] = i;\r\n                scope_Connects.push(addConnect(connectBase, connectOptions[i + 1]));\r\n            }\r\n        }\r\n\r\n        // Initialize a single slider.\r\n        function addSlider(addTarget) {\r\n            // Apply classes and data to the target.\r\n            addClass(addTarget, options.cssClasses.target);\r\n\r\n            if (options.dir === 0) {\r\n                addClass(addTarget, options.cssClasses.ltr);\r\n            } else {\r\n                addClass(addTarget, options.cssClasses.rtl);\r\n            }\r\n\r\n            if (options.ort === 0) {\r\n                addClass(addTarget, options.cssClasses.horizontal);\r\n            } else {\r\n                addClass(addTarget, options.cssClasses.vertical);\r\n            }\r\n\r\n            return addNodeTo(addTarget, options.cssClasses.base);\r\n        }\r\n\r\n        function addTooltip(handle, handleNumber) {\r\n            if (!options.tooltips[handleNumber]) {\r\n                return false;\r\n            }\r\n\r\n            return addNodeTo(handle.firstChild, options.cssClasses.tooltip);\r\n        }\r\n\r\n        // The tooltips option is a shorthand for using the 'update' event.\r\n        function tooltips() {\r\n            // Tooltips are added with options.tooltips in original order.\r\n            var tips = scope_Handles.map(addTooltip);\r\n\r\n            bindEvent(\"update\", function(values, handleNumber, unencoded) {\r\n                if (!tips[handleNumber]) {\r\n                    return;\r\n                }\r\n\r\n                var formattedValue = values[handleNumber];\r\n\r\n                if (options.tooltips[handleNumber] !== true) {\r\n                    formattedValue = options.tooltips[handleNumber].to(unencoded[handleNumber]);\r\n                }\r\n\r\n                tips[handleNumber].innerHTML = formattedValue;\r\n            });\r\n        }\r\n\r\n        function aria() {\r\n            bindEvent(\"update\", function(values, handleNumber, unencoded, tap, positions) {\r\n                // Update Aria Values for all handles, as a change in one changes min and max values for the next.\r\n                scope_HandleNumbers.forEach(function(index) {\r\n                    var handle = scope_Handles[index];\r\n\r\n                    var min = checkHandlePosition(scope_Locations, index, 0, true, true, true);\r\n                    var max = checkHandlePosition(scope_Locations, index, 100, true, true, true);\r\n\r\n                    var now = positions[index];\r\n\r\n                    // Formatted value for display\r\n                    var text = options.ariaFormat.to(unencoded[index]);\r\n\r\n                    // Map to slider range values\r\n                    min = scope_Spectrum.fromStepping(min).toFixed(1);\r\n                    max = scope_Spectrum.fromStepping(max).toFixed(1);\r\n                    now = scope_Spectrum.fromStepping(now).toFixed(1);\r\n\r\n                    handle.children[0].setAttribute(\"aria-valuemin\", min);\r\n                    handle.children[0].setAttribute(\"aria-valuemax\", max);\r\n                    handle.children[0].setAttribute(\"aria-valuenow\", now);\r\n                    handle.children[0].setAttribute(\"aria-valuetext\", text);\r\n                });\r\n            });\r\n        }\r\n\r\n        function getGroup(mode, values, stepped) {\r\n            // Use the range.\r\n            if (mode === \"range\" || mode === \"steps\") {\r\n                return scope_Spectrum.xVal;\r\n            }\r\n\r\n            if (mode === \"count\") {\r\n                if (values < 2) {\r\n                    throw new Error(\"noUiSlider (\" + VERSION + \"): 'values' (>= 2) required for mode 'count'.\");\r\n                }\r\n\r\n                // Divide 0 - 100 in 'count' parts.\r\n                var interval = values - 1;\r\n                var spread = 100 / interval;\r\n\r\n                values = [];\r\n\r\n                // List these parts and have them handled as 'positions'.\r\n                while (interval--) {\r\n                    values[interval] = interval * spread;\r\n                }\r\n\r\n                values.push(100);\r\n\r\n                mode = \"positions\";\r\n            }\r\n\r\n            if (mode === \"positions\") {\r\n                // Map all percentages to on-range values.\r\n                return values.map(function(value) {\r\n                    return scope_Spectrum.fromStepping(stepped ? scope_Spectrum.getStep(value) : value);\r\n                });\r\n            }\r\n\r\n            if (mode === \"values\") {\r\n                // If the value must be stepped, it needs to be converted to a percentage first.\r\n                if (stepped) {\r\n                    return values.map(function(value) {\r\n                        // Convert to percentage, apply step, return to value.\r\n                        return scope_Spectrum.fromStepping(scope_Spectrum.getStep(scope_Spectrum.toStepping(value)));\r\n                    });\r\n                }\r\n\r\n                // Otherwise, we can simply use the values.\r\n                return values;\r\n            }\r\n        }\r\n\r\n        function generateSpread(density, mode, group) {\r\n            function safeIncrement(value, increment) {\r\n                // Avoid floating point variance by dropping the smallest decimal places.\r\n                return (value + increment).toFixed(7) / 1;\r\n            }\r\n\r\n            var indexes = {};\r\n            var firstInRange = scope_Spectrum.xVal[0];\r\n            var lastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length - 1];\r\n            var ignoreFirst = false;\r\n            var ignoreLast = false;\r\n            var prevPct = 0;\r\n\r\n            // Create a copy of the group, sort it and filter away all duplicates.\r\n            group = unique(\r\n                group.slice().sort(function(a, b) {\r\n                    return a - b;\r\n                })\r\n            );\r\n\r\n            // Make sure the range starts with the first element.\r\n            if (group[0] !== firstInRange) {\r\n                group.unshift(firstInRange);\r\n                ignoreFirst = true;\r\n            }\r\n\r\n            // Likewise for the last one.\r\n            if (group[group.length - 1] !== lastInRange) {\r\n                group.push(lastInRange);\r\n                ignoreLast = true;\r\n            }\r\n\r\n            group.forEach(function(current, index) {\r\n                // Get the current step and the lower + upper positions.\r\n                var step;\r\n                var i;\r\n                var q;\r\n                var low = current;\r\n                var high = group[index + 1];\r\n                var newPct;\r\n                var pctDifference;\r\n                var pctPos;\r\n                var type;\r\n                var steps;\r\n                var realSteps;\r\n                var stepSize;\r\n                var isSteps = mode === \"steps\";\r\n\r\n                // When using 'steps' mode, use the provided steps.\r\n                // Otherwise, we'll step on to the next subrange.\r\n                if (isSteps) {\r\n                    step = scope_Spectrum.xNumSteps[index];\r\n                }\r\n\r\n                // Default to a 'full' step.\r\n                if (!step) {\r\n                    step = high - low;\r\n                }\r\n\r\n                // Low can be 0, so test for false. If high is undefined,\r\n                // we are at the last subrange. Index 0 is already handled.\r\n                if (low === false || high === undefined) {\r\n                    return;\r\n                }\r\n\r\n                // Make sure step isn't 0, which would cause an infinite loop (#654)\r\n                step = Math.max(step, 0.0000001);\r\n\r\n                // Find all steps in the subrange.\r\n                for (i = low; i <= high; i = safeIncrement(i, step)) {\r\n                    // Get the percentage value for the current step,\r\n                    // calculate the size for the subrange.\r\n                    newPct = scope_Spectrum.toStepping(i);\r\n                    pctDifference = newPct - prevPct;\r\n\r\n                    steps = pctDifference / density;\r\n                    realSteps = Math.round(steps);\r\n\r\n                    // This ratio represents the amount of percentage-space a point indicates.\r\n                    // For a density 1 the points/percentage = 1. For density 2, that percentage needs to be re-divided.\r\n                    // Round the percentage offset to an even number, then divide by two\r\n                    // to spread the offset on both sides of the range.\r\n                    stepSize = pctDifference / realSteps;\r\n\r\n                    // Divide all points evenly, adding the correct number to this subrange.\r\n                    // Run up to <= so that 100% gets a point, event if ignoreLast is set.\r\n                    for (q = 1; q <= realSteps; q += 1) {\r\n                        // The ratio between the rounded value and the actual size might be ~1% off.\r\n                        // Correct the percentage offset by the number of points\r\n                        // per subrange. density = 1 will result in 100 points on the\r\n                        // full range, 2 for 50, 4 for 25, etc.\r\n                        pctPos = prevPct + q * stepSize;\r\n                        indexes[pctPos.toFixed(5)] = [scope_Spectrum.fromStepping(pctPos), 0];\r\n                    }\r\n\r\n                    // Determine the point type.\r\n                    type = group.indexOf(i) > -1 ? PIPS_LARGE_VALUE : isSteps ? PIPS_SMALL_VALUE : PIPS_NO_VALUE;\r\n\r\n                    // Enforce the 'ignoreFirst' option by overwriting the type for 0.\r\n                    if (!index && ignoreFirst) {\r\n                        type = 0;\r\n                    }\r\n\r\n                    if (!(i === high && ignoreLast)) {\r\n                        // Mark the 'type' of this point. 0 = plain, 1 = real value, 2 = step value.\r\n                        indexes[newPct.toFixed(5)] = [i, type];\r\n                    }\r\n\r\n                    // Update the percentage count.\r\n                    prevPct = newPct;\r\n                }\r\n            });\r\n\r\n            return indexes;\r\n        }\r\n\r\n        function addMarking(spread, filterFunc, formatter) {\r\n            var element = scope_Document.createElement(\"div\");\r\n\r\n            var valueSizeClasses = [];\r\n            valueSizeClasses[PIPS_NO_VALUE] = options.cssClasses.valueNormal;\r\n            valueSizeClasses[PIPS_LARGE_VALUE] = options.cssClasses.valueLarge;\r\n            valueSizeClasses[PIPS_SMALL_VALUE] = options.cssClasses.valueSub;\r\n\r\n            var markerSizeClasses = [];\r\n            markerSizeClasses[PIPS_NO_VALUE] = options.cssClasses.markerNormal;\r\n            markerSizeClasses[PIPS_LARGE_VALUE] = options.cssClasses.markerLarge;\r\n            markerSizeClasses[PIPS_SMALL_VALUE] = options.cssClasses.markerSub;\r\n\r\n            var valueOrientationClasses = [options.cssClasses.valueHorizontal, options.cssClasses.valueVertical];\r\n            var markerOrientationClasses = [options.cssClasses.markerHorizontal, options.cssClasses.markerVertical];\r\n\r\n            addClass(element, options.cssClasses.pips);\r\n            addClass(element, options.ort === 0 ? options.cssClasses.pipsHorizontal : options.cssClasses.pipsVertical);\r\n\r\n            function getClasses(type, source) {\r\n                var a = source === options.cssClasses.value;\r\n                var orientationClasses = a ? valueOrientationClasses : markerOrientationClasses;\r\n                var sizeClasses = a ? valueSizeClasses : markerSizeClasses;\r\n\r\n                return source + \" \" + orientationClasses[options.ort] + \" \" + sizeClasses[type];\r\n            }\r\n\r\n            function addSpread(offset, value, type) {\r\n                // Apply the filter function, if it is set.\r\n                type = filterFunc ? filterFunc(value, type) : type;\r\n\r\n                if (type === PIPS_NONE) {\r\n                    return;\r\n                }\r\n\r\n                // Add a marker for every point\r\n                var node = addNodeTo(element, false);\r\n                node.className = getClasses(type, options.cssClasses.marker);\r\n                node.style[options.style] = offset + \"%\";\r\n\r\n                // Values are only appended for points marked '1' or '2'.\r\n                if (type > PIPS_NO_VALUE) {\r\n                    node = addNodeTo(element, false);\r\n                    node.className = getClasses(type, options.cssClasses.value);\r\n                    node.setAttribute(\"data-value\", value);\r\n                    node.style[options.style] = offset + \"%\";\r\n                    node.innerHTML = formatter.to(value);\r\n                }\r\n            }\r\n\r\n            // Append all points.\r\n            Object.keys(spread).forEach(function(offset) {\r\n                addSpread(offset, spread[offset][0], spread[offset][1]);\r\n            });\r\n\r\n            return element;\r\n        }\r\n\r\n        function removePips() {\r\n            if (scope_Pips) {\r\n                removeElement(scope_Pips);\r\n                scope_Pips = null;\r\n            }\r\n        }\r\n\r\n        function pips(grid) {\r\n            // Fix #669\r\n            removePips();\r\n\r\n            var mode = grid.mode;\r\n            var density = grid.density || 1;\r\n            var filter = grid.filter || false;\r\n            var values = grid.values || false;\r\n            var stepped = grid.stepped || false;\r\n            var group = getGroup(mode, values, stepped);\r\n            var spread = generateSpread(density, mode, group);\r\n            var format = grid.format || {\r\n                to: Math.round\r\n            };\r\n\r\n            scope_Pips = scope_Target.appendChild(addMarking(spread, filter, format));\r\n\r\n            return scope_Pips;\r\n        }\r\n\r\n        // Shorthand for base dimensions.\r\n        function baseSize() {\r\n            var rect = scope_Base.getBoundingClientRect();\r\n            var alt = \"offset\" + [\"Width\", \"Height\"][options.ort];\r\n            return options.ort === 0 ? rect.width || scope_Base[alt] : rect.height || scope_Base[alt];\r\n        }\r\n\r\n        // Handler for attaching events trough a proxy.\r\n        function attachEvent(events, element, callback, data) {\r\n            // This function can be used to 'filter' events to the slider.\r\n            // element is a node, not a nodeList\r\n\r\n            var method = function(e) {\r\n                e = fixEvent(e, data.pageOffset, data.target || element);\r\n\r\n                // fixEvent returns false if this event has a different target\r\n                // when handling (multi-) touch events;\r\n                if (!e) {\r\n                    return false;\r\n                }\r\n\r\n                // doNotReject is passed by all end events to make sure released touches\r\n                // are not rejected, leaving the slider \"stuck\" to the cursor;\r\n                if (scope_Target.hasAttribute(\"disabled\") && !data.doNotReject) {\r\n                    return false;\r\n                }\r\n\r\n                // Stop if an active 'tap' transition is taking place.\r\n                if (hasClass(scope_Target, options.cssClasses.tap) && !data.doNotReject) {\r\n                    return false;\r\n                }\r\n\r\n                // Ignore right or middle clicks on start #454\r\n                if (events === actions.start && e.buttons !== undefined && e.buttons > 1) {\r\n                    return false;\r\n                }\r\n\r\n                // Ignore right or middle clicks on start #454\r\n                if (data.hover && e.buttons) {\r\n                    return false;\r\n                }\r\n\r\n                // 'supportsPassive' is only true if a browser also supports touch-action: none in CSS.\r\n                // iOS safari does not, so it doesn't get to benefit from passive scrolling. iOS does support\r\n                // touch-action: manipulation, but that allows panning, which breaks\r\n                // sliders after zooming/on non-responsive pages.\r\n                // See: https://bugs.webkit.org/show_bug.cgi?id=133112\r\n                if (!supportsPassive) {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                e.calcPoint = e.points[options.ort];\r\n\r\n                // Call the event handler with the event [ and additional data ].\r\n                callback(e, data);\r\n            };\r\n\r\n            var methods = [];\r\n\r\n            // Bind a closure on the target for every event type.\r\n            events.split(\" \").forEach(function(eventName) {\r\n                element.addEventListener(eventName, method, supportsPassive ? { passive: true } : false);\r\n                methods.push([eventName, method]);\r\n            });\r\n\r\n            return methods;\r\n        }\r\n\r\n        // Provide a clean event with standardized offset values.\r\n        function fixEvent(e, pageOffset, eventTarget) {\r\n            // Filter the event to register the type, which can be\r\n            // touch, mouse or pointer. Offset changes need to be\r\n            // made on an event specific basis.\r\n            var touch = e.type.indexOf(\"touch\") === 0;\r\n            var mouse = e.type.indexOf(\"mouse\") === 0;\r\n            var pointer = e.type.indexOf(\"pointer\") === 0;\r\n\r\n            var x;\r\n            var y;\r\n\r\n            // IE10 implemented pointer events with a prefix;\r\n            if (e.type.indexOf(\"MSPointer\") === 0) {\r\n                pointer = true;\r\n            }\r\n\r\n            // The only thing one handle should be concerned about is the touches that originated on top of it.\r\n            if (touch) {\r\n                // Returns true if a touch originated on the target.\r\n                var isTouchOnTarget = function(checkTouch) {\r\n                    return checkTouch.target === eventTarget || eventTarget.contains(checkTouch.target);\r\n                };\r\n\r\n                // In the case of touchstart events, we need to make sure there is still no more than one\r\n                // touch on the target so we look amongst all touches.\r\n                if (e.type === \"touchstart\") {\r\n                    var targetTouches = Array.prototype.filter.call(e.touches, isTouchOnTarget);\r\n\r\n                    // Do not support more than one touch per handle.\r\n                    if (targetTouches.length > 1) {\r\n                        return false;\r\n                    }\r\n\r\n                    x = targetTouches[0].pageX;\r\n                    y = targetTouches[0].pageY;\r\n                } else {\r\n                    // In the other cases, find on changedTouches is enough.\r\n                    var targetTouch = Array.prototype.find.call(e.changedTouches, isTouchOnTarget);\r\n\r\n                    // Cancel if the target touch has not moved.\r\n                    if (!targetTouch) {\r\n                        return false;\r\n                    }\r\n\r\n                    x = targetTouch.pageX;\r\n                    y = targetTouch.pageY;\r\n                }\r\n            }\r\n\r\n            pageOffset = pageOffset || getPageOffset(scope_Document);\r\n\r\n            if (mouse || pointer) {\r\n                x = e.clientX + pageOffset.x;\r\n                y = e.clientY + pageOffset.y;\r\n            }\r\n\r\n            e.pageOffset = pageOffset;\r\n            e.points = [x, y];\r\n            e.cursor = mouse || pointer; // Fix #435\r\n\r\n            return e;\r\n        }\r\n\r\n        // Translate a coordinate in the document to a percentage on the slider\r\n        function calcPointToPercentage(calcPoint) {\r\n            var location = calcPoint - offset(scope_Base, options.ort);\r\n            var proposal = (location * 100) / baseSize();\r\n\r\n            // Clamp proposal between 0% and 100%\r\n            // Out-of-bound coordinates may occur when .noUi-base pseudo-elements\r\n            // are used (e.g. contained handles feature)\r\n            proposal = limit(proposal);\r\n\r\n            return options.dir ? 100 - proposal : proposal;\r\n        }\r\n\r\n        // Find handle closest to a certain percentage on the slider\r\n        function getClosestHandle(proposal) {\r\n            var closest = 100;\r\n            var handleNumber = false;\r\n\r\n            scope_Handles.forEach(function(handle, index) {\r\n                // Disabled handles are ignored\r\n                if (handle.hasAttribute(\"disabled\")) {\r\n                    return;\r\n                }\r\n\r\n                var pos = Math.abs(scope_Locations[index] - proposal);\r\n\r\n                if (pos < closest || (pos === 100 && closest === 100)) {\r\n                    handleNumber = index;\r\n                    closest = pos;\r\n                }\r\n            });\r\n\r\n            return handleNumber;\r\n        }\r\n\r\n        // Fire 'end' when a mouse or pen leaves the document.\r\n        function documentLeave(event, data) {\r\n            if (event.type === \"mouseout\" && event.target.nodeName === \"HTML\" && event.relatedTarget === null) {\r\n                eventEnd(event, data);\r\n            }\r\n        }\r\n\r\n        // Handle movement on document for handle and range drag.\r\n        function eventMove(event, data) {\r\n            // Fix #498\r\n            // Check value of .buttons in 'start' to work around a bug in IE10 mobile (data.buttonsProperty).\r\n            // https://connect.microsoft.com/IE/feedback/details/927005/mobile-ie10-windows-phone-buttons-property-of-pointermove-event-always-zero\r\n            // IE9 has .buttons and .which zero on mousemove.\r\n            // Firefox breaks the spec MDN defines.\r\n            if (navigator.appVersion.indexOf(\"MSIE 9\") === -1 && event.buttons === 0 && data.buttonsProperty !== 0) {\r\n                return eventEnd(event, data);\r\n            }\r\n\r\n            // Check if we are moving up or down\r\n            var movement = (options.dir ? -1 : 1) * (event.calcPoint - data.startCalcPoint);\r\n\r\n            // Convert the movement into a percentage of the slider width/height\r\n            var proposal = (movement * 100) / data.baseSize;\r\n\r\n            moveHandles(movement > 0, proposal, data.locations, data.handleNumbers);\r\n        }\r\n\r\n        // Unbind move events on document, call callbacks.\r\n        function eventEnd(event, data) {\r\n            // The handle is no longer active, so remove the class.\r\n            if (data.handle) {\r\n                removeClass(data.handle, options.cssClasses.active);\r\n                scope_ActiveHandlesCount -= 1;\r\n            }\r\n\r\n            // Unbind the move and end events, which are added on 'start'.\r\n            data.listeners.forEach(function(c) {\r\n                scope_DocumentElement.removeEventListener(c[0], c[1]);\r\n            });\r\n\r\n            if (scope_ActiveHandlesCount === 0) {\r\n                // Remove dragging class.\r\n                removeClass(scope_Target, options.cssClasses.drag);\r\n                setZindex();\r\n\r\n                // Remove cursor styles and text-selection events bound to the body.\r\n                if (event.cursor) {\r\n                    scope_Body.style.cursor = \"\";\r\n                    scope_Body.removeEventListener(\"selectstart\", preventDefault);\r\n                }\r\n            }\r\n\r\n            data.handleNumbers.forEach(function(handleNumber) {\r\n                fireEvent(\"change\", handleNumber);\r\n                fireEvent(\"set\", handleNumber);\r\n                fireEvent(\"end\", handleNumber);\r\n            });\r\n        }\r\n\r\n        // Bind move events on document.\r\n        function eventStart(event, data) {\r\n            var handle;\r\n            if (data.handleNumbers.length === 1) {\r\n                var handleOrigin = scope_Handles[data.handleNumbers[0]];\r\n\r\n                // Ignore 'disabled' handles\r\n                if (handleOrigin.hasAttribute(\"disabled\")) {\r\n                    return false;\r\n                }\r\n\r\n                handle = handleOrigin.children[0];\r\n                scope_ActiveHandlesCount += 1;\r\n\r\n                // Mark the handle as 'active' so it can be styled.\r\n                addClass(handle, options.cssClasses.active);\r\n            }\r\n\r\n            // A drag should never propagate up to the 'tap' event.\r\n            event.stopPropagation();\r\n\r\n            // Record the event listeners.\r\n            var listeners = [];\r\n\r\n            // Attach the move and end events.\r\n            var moveEvent = attachEvent(actions.move, scope_DocumentElement, eventMove, {\r\n                // The event target has changed so we need to propagate the original one so that we keep\r\n                // relying on it to extract target touches.\r\n                target: event.target,\r\n                handle: handle,\r\n                listeners: listeners,\r\n                startCalcPoint: event.calcPoint,\r\n                baseSize: baseSize(),\r\n                pageOffset: event.pageOffset,\r\n                handleNumbers: data.handleNumbers,\r\n                buttonsProperty: event.buttons,\r\n                locations: scope_Locations.slice()\r\n            });\r\n\r\n            var endEvent = attachEvent(actions.end, scope_DocumentElement, eventEnd, {\r\n                target: event.target,\r\n                handle: handle,\r\n                listeners: listeners,\r\n                doNotReject: true,\r\n                handleNumbers: data.handleNumbers\r\n            });\r\n\r\n            var outEvent = attachEvent(\"mouseout\", scope_DocumentElement, documentLeave, {\r\n                target: event.target,\r\n                handle: handle,\r\n                listeners: listeners,\r\n                doNotReject: true,\r\n                handleNumbers: data.handleNumbers\r\n            });\r\n\r\n            // We want to make sure we pushed the listeners in the listener list rather than creating\r\n            // a new one as it has already been passed to the event handlers.\r\n            listeners.push.apply(listeners, moveEvent.concat(endEvent, outEvent));\r\n\r\n            // Text selection isn't an issue on touch devices,\r\n            // so adding cursor styles can be skipped.\r\n            if (event.cursor) {\r\n                // Prevent the 'I' cursor and extend the range-drag cursor.\r\n                scope_Body.style.cursor = getComputedStyle(event.target).cursor;\r\n\r\n                // Mark the target with a dragging state.\r\n                if (scope_Handles.length > 1) {\r\n                    addClass(scope_Target, options.cssClasses.drag);\r\n                }\r\n\r\n                // Prevent text selection when dragging the handles.\r\n                // In noUiSlider <= 9.2.0, this was handled by calling preventDefault on mouse/touch start/move,\r\n                // which is scroll blocking. The selectstart event is supported by FireFox starting from version 52,\r\n                // meaning the only holdout is iOS Safari. This doesn't matter: text selection isn't triggered there.\r\n                // The 'cursor' flag is false.\r\n                // See: http://caniuse.com/#search=selectstart\r\n                scope_Body.addEventListener(\"selectstart\", preventDefault, false);\r\n            }\r\n\r\n            data.handleNumbers.forEach(function(handleNumber) {\r\n                fireEvent(\"start\", handleNumber);\r\n            });\r\n        }\r\n\r\n        // Move closest handle to tapped location.\r\n        function eventTap(event) {\r\n            // The tap event shouldn't propagate up\r\n            event.stopPropagation();\r\n\r\n            var proposal = calcPointToPercentage(event.calcPoint);\r\n            var handleNumber = getClosestHandle(proposal);\r\n\r\n            // Tackle the case that all handles are 'disabled'.\r\n            if (handleNumber === false) {\r\n                return false;\r\n            }\r\n\r\n            // Flag the slider as it is now in a transitional state.\r\n            // Transition takes a configurable amount of ms (default 300). Re-enable the slider after that.\r\n            if (!options.events.snap) {\r\n                addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);\r\n            }\r\n\r\n            setHandle(handleNumber, proposal, true, true);\r\n\r\n            setZindex();\r\n\r\n            fireEvent(\"slide\", handleNumber, true);\r\n            fireEvent(\"update\", handleNumber, true);\r\n            fireEvent(\"change\", handleNumber, true);\r\n            fireEvent(\"set\", handleNumber, true);\r\n\r\n            if (options.events.snap) {\r\n                eventStart(event, { handleNumbers: [handleNumber] });\r\n            }\r\n        }\r\n\r\n        // Fires a 'hover' event for a hovered mouse/pen position.\r\n        function eventHover(event) {\r\n            var proposal = calcPointToPercentage(event.calcPoint);\r\n\r\n            var to = scope_Spectrum.getStep(proposal);\r\n            var value = scope_Spectrum.fromStepping(to);\r\n\r\n            Object.keys(scope_Events).forEach(function(targetEvent) {\r\n                if (\"hover\" === targetEvent.split(\".\")[0]) {\r\n                    scope_Events[targetEvent].forEach(function(callback) {\r\n                        callback.call(scope_Self, value);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        // Attach events to several slider parts.\r\n        function bindSliderEvents(behaviour) {\r\n            // Attach the standard drag event to the handles.\r\n            if (!behaviour.fixed) {\r\n                scope_Handles.forEach(function(handle, index) {\r\n                    // These events are only bound to the visual handle\r\n                    // element, not the 'real' origin element.\r\n                    attachEvent(actions.start, handle.children[0], eventStart, {\r\n                        handleNumbers: [index]\r\n                    });\r\n                });\r\n            }\r\n\r\n            // Attach the tap event to the slider base.\r\n            if (behaviour.tap) {\r\n                attachEvent(actions.start, scope_Base, eventTap, {});\r\n            }\r\n\r\n            // Fire hover events\r\n            if (behaviour.hover) {\r\n                attachEvent(actions.move, scope_Base, eventHover, {\r\n                    hover: true\r\n                });\r\n            }\r\n\r\n            // Make the range draggable.\r\n            if (behaviour.drag) {\r\n                scope_Connects.forEach(function(connect, index) {\r\n                    if (connect === false || index === 0 || index === scope_Connects.length - 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var handleBefore = scope_Handles[index - 1];\r\n                    var handleAfter = scope_Handles[index];\r\n                    var eventHolders = [connect];\r\n\r\n                    addClass(connect, options.cssClasses.draggable);\r\n\r\n                    // When the range is fixed, the entire range can\r\n                    // be dragged by the handles. The handle in the first\r\n                    // origin will propagate the start event upward,\r\n                    // but it needs to be bound manually on the other.\r\n                    if (behaviour.fixed) {\r\n                        eventHolders.push(handleBefore.children[0]);\r\n                        eventHolders.push(handleAfter.children[0]);\r\n                    }\r\n\r\n                    eventHolders.forEach(function(eventHolder) {\r\n                        attachEvent(actions.start, eventHolder, eventStart, {\r\n                            handles: [handleBefore, handleAfter],\r\n                            handleNumbers: [index - 1, index]\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        // Attach an event to this slider, possibly including a namespace\r\n        function bindEvent(namespacedEvent, callback) {\r\n            scope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];\r\n            scope_Events[namespacedEvent].push(callback);\r\n\r\n            // If the event bound is 'update,' fire it immediately for all handles.\r\n            if (namespacedEvent.split(\".\")[0] === \"update\") {\r\n                scope_Handles.forEach(function(a, index) {\r\n                    fireEvent(\"update\", index);\r\n                });\r\n            }\r\n        }\r\n\r\n        // Undo attachment of event\r\n        function removeEvent(namespacedEvent) {\r\n            var event = namespacedEvent && namespacedEvent.split(\".\")[0];\r\n            var namespace = event && namespacedEvent.substring(event.length);\r\n\r\n            Object.keys(scope_Events).forEach(function(bind) {\r\n                var tEvent = bind.split(\".\")[0];\r\n                var tNamespace = bind.substring(tEvent.length);\r\n\r\n                if ((!event || event === tEvent) && (!namespace || namespace === tNamespace)) {\r\n                    delete scope_Events[bind];\r\n                }\r\n            });\r\n        }\r\n\r\n        // External event handling\r\n        function fireEvent(eventName, handleNumber, tap) {\r\n            Object.keys(scope_Events).forEach(function(targetEvent) {\r\n                var eventType = targetEvent.split(\".\")[0];\r\n\r\n                if (eventName === eventType) {\r\n                    scope_Events[targetEvent].forEach(function(callback) {\r\n                        callback.call(\r\n                            // Use the slider public API as the scope ('this')\r\n                            scope_Self,\r\n                            // Return values as array, so arg_1[arg_2] is always valid.\r\n                            scope_Values.map(options.format.to),\r\n                            // Handle index, 0 or 1\r\n                            handleNumber,\r\n                            // Un-formatted slider values\r\n                            scope_Values.slice(),\r\n                            // Event is fired by tap, true or false\r\n                            tap || false,\r\n                            // Left offset of the handle, in relation to the slider\r\n                            scope_Locations.slice()\r\n                        );\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        function toPct(pct) {\r\n            return pct + \"%\";\r\n        }\r\n\r\n        // Split out the handle positioning logic so the Move event can use it, too\r\n        function checkHandlePosition(reference, handleNumber, to, lookBackward, lookForward, getValue) {\r\n            // For sliders with multiple handles, limit movement to the other handle.\r\n            // Apply the margin option by adding it to the handle positions.\r\n            if (scope_Handles.length > 1 && !options.events.unconstrained) {\r\n                if (lookBackward && handleNumber > 0) {\r\n                    to = Math.max(to, reference[handleNumber - 1] + options.margin);\r\n                }\r\n\r\n                if (lookForward && handleNumber < scope_Handles.length - 1) {\r\n                    to = Math.min(to, reference[handleNumber + 1] - options.margin);\r\n                }\r\n            }\r\n\r\n            // The limit option has the opposite effect, limiting handles to a\r\n            // maximum distance from another. Limit must be > 0, as otherwise\r\n            // handles would be unmovable.\r\n            if (scope_Handles.length > 1 && options.limit) {\r\n                if (lookBackward && handleNumber > 0) {\r\n                    to = Math.min(to, reference[handleNumber - 1] + options.limit);\r\n                }\r\n\r\n                if (lookForward && handleNumber < scope_Handles.length - 1) {\r\n                    to = Math.max(to, reference[handleNumber + 1] - options.limit);\r\n                }\r\n            }\r\n\r\n            // The padding option keeps the handles a certain distance from the\r\n            // edges of the slider. Padding must be > 0.\r\n            if (options.padding) {\r\n                if (handleNumber === 0) {\r\n                    to = Math.max(to, options.padding[0]);\r\n                }\r\n\r\n                if (handleNumber === scope_Handles.length - 1) {\r\n                    to = Math.min(to, 100 - options.padding[1]);\r\n                }\r\n            }\r\n\r\n            to = scope_Spectrum.getStep(to);\r\n\r\n            // Limit percentage to the 0 - 100 range\r\n            to = limit(to);\r\n\r\n            // Return false if handle can't move\r\n            if (to === reference[handleNumber] && !getValue) {\r\n                return false;\r\n            }\r\n\r\n            return to;\r\n        }\r\n\r\n        // Uses slider orientation to create CSS rules. a = base value;\r\n        function inRuleOrder(v, a) {\r\n            var o = options.ort;\r\n            return (o ? a : v) + \", \" + (o ? v : a);\r\n        }\r\n\r\n        // Moves handle(s) by a percentage\r\n        // (bool, % to move, [% where handle started, ...], [index in scope_Handles, ...])\r\n        function moveHandles(upward, proposal, locations, handleNumbers) {\r\n            var proposals = locations.slice();\r\n\r\n            var b = [!upward, upward];\r\n            var f = [upward, !upward];\r\n\r\n            // Copy handleNumbers so we don't change the dataset\r\n            handleNumbers = handleNumbers.slice();\r\n\r\n            // Check to see which handle is 'leading'.\r\n            // If that one can't move the second can't either.\r\n            if (upward) {\r\n                handleNumbers.reverse();\r\n            }\r\n\r\n            // Step 1: get the maximum percentage that any of the handles can move\r\n            if (handleNumbers.length > 1) {\r\n                handleNumbers.forEach(function(handleNumber, o) {\r\n                    var to = checkHandlePosition(\r\n                        proposals,\r\n                        handleNumber,\r\n                        proposals[handleNumber] + proposal,\r\n                        b[o],\r\n                        f[o],\r\n                        false\r\n                    );\r\n\r\n                    // Stop if one of the handles can't move.\r\n                    if (to === false) {\r\n                        proposal = 0;\r\n                    } else {\r\n                        proposal = to - proposals[handleNumber];\r\n                        proposals[handleNumber] = to;\r\n                    }\r\n                });\r\n            }\r\n\r\n            // If using one handle, check backward AND forward\r\n            else {\r\n                b = f = [true];\r\n            }\r\n\r\n            var state = false;\r\n\r\n            // Step 2: Try to set the handles with the found percentage\r\n            handleNumbers.forEach(function(handleNumber, o) {\r\n                state = setHandle(handleNumber, locations[handleNumber] + proposal, b[o], f[o]) || state;\r\n            });\r\n\r\n            // Step 3: If a handle moved, fire events\r\n            if (state) {\r\n                handleNumbers.forEach(function(handleNumber) {\r\n                    fireEvent(\"update\", handleNumber);\r\n                    fireEvent(\"slide\", handleNumber);\r\n                });\r\n            }\r\n        }\r\n\r\n        // Takes a base value and an offset. This offset is used for the connect bar size.\r\n        // In the initial design for this feature, the origin element was 1% wide.\r\n        // Unfortunately, a rounding bug in Chrome makes it impossible to implement this feature\r\n        // in this manner: https://bugs.chromium.org/p/chromium/issues/detail?id=798223\r\n        function transformDirection(a, b) {\r\n            return options.dir ? 100 - a - b : a;\r\n        }\r\n\r\n        // Updates scope_Locations and scope_Values, updates visual state\r\n        function updateHandlePosition(handleNumber, to) {\r\n            // Update locations.\r\n            scope_Locations[handleNumber] = to;\r\n\r\n            // Convert the value to the slider stepping/range.\r\n            scope_Values[handleNumber] = scope_Spectrum.fromStepping(to);\r\n\r\n            var rule = \"translate(\" + inRuleOrder(toPct(transformDirection(to, 0) - scope_DirOffset), \"0\") + \")\";\r\n            scope_Handles[handleNumber].style[options.transformRule] = rule;\r\n\r\n            updateConnect(handleNumber);\r\n            updateConnect(handleNumber + 1);\r\n        }\r\n\r\n        // Handles before the slider middle are stacked later = higher,\r\n        // Handles after the middle later is lower\r\n        // [[7] [8] .......... | .......... [5] [4]\r\n        function setZindex() {\r\n            scope_HandleNumbers.forEach(function(handleNumber) {\r\n                var dir = scope_Locations[handleNumber] > 50 ? -1 : 1;\r\n                var zIndex = 3 + (scope_Handles.length + dir * handleNumber);\r\n                scope_Handles[handleNumber].style.zIndex = zIndex;\r\n            });\r\n        }\r\n\r\n        // Test suggested values and apply margin, step.\r\n        function setHandle(handleNumber, to, lookBackward, lookForward) {\r\n            to = checkHandlePosition(scope_Locations, handleNumber, to, lookBackward, lookForward, false);\r\n\r\n            if (to === false) {\r\n                return false;\r\n            }\r\n\r\n            updateHandlePosition(handleNumber, to);\r\n\r\n            return true;\r\n        }\r\n\r\n        // Updates style attribute for connect nodes\r\n        function updateConnect(index) {\r\n            // Skip connects set to false\r\n            if (!scope_Connects[index]) {\r\n                return;\r\n            }\r\n\r\n            var l = 0;\r\n            var h = 100;\r\n\r\n            if (index !== 0) {\r\n                l = scope_Locations[index - 1];\r\n            }\r\n\r\n            if (index !== scope_Connects.length - 1) {\r\n                h = scope_Locations[index];\r\n            }\r\n\r\n            // We use two rules:\r\n            // 'translate' to change the left/top offset;\r\n            // 'scale' to change the width of the element;\r\n            // As the element has a width of 100%, a translation of 100% is equal to 100% of the parent (.noUi-base)\r\n            var connectWidth = h - l;\r\n            var translateRule = \"translate(\" + inRuleOrder(toPct(transformDirection(l, connectWidth)), \"0\") + \")\";\r\n            var scaleRule = \"scale(\" + inRuleOrder(connectWidth / 100, \"1\") + \")\";\r\n\r\n            scope_Connects[index].style[options.transformRule] = translateRule + \" \" + scaleRule;\r\n        }\r\n\r\n        // Parses value passed to .set method. Returns current value if not parse-able.\r\n        function resolveToValue(to, handleNumber) {\r\n            // Setting with null indicates an 'ignore'.\r\n            // Inputting 'false' is invalid.\r\n            if (to === null || to === false || to === undefined) {\r\n                return scope_Locations[handleNumber];\r\n            }\r\n\r\n            // If a formatted number was passed, attempt to decode it.\r\n            if (typeof to === \"number\") {\r\n                to = String(to);\r\n            }\r\n\r\n            to = options.format.from(to);\r\n            to = scope_Spectrum.toStepping(to);\r\n\r\n            // If parsing the number failed, use the current value.\r\n            if (to === false || isNaN(to)) {\r\n                return scope_Locations[handleNumber];\r\n            }\r\n\r\n            return to;\r\n        }\r\n\r\n        // Set the slider value.\r\n        function valueSet(input, fireSetEvent) {\r\n            var values = asArray(input);\r\n            var isInit = scope_Locations[0] === undefined;\r\n\r\n            // Event fires by default\r\n            fireSetEvent = fireSetEvent === undefined ? true : !!fireSetEvent;\r\n\r\n            // Animation is optional.\r\n            // Make sure the initial values were set before using animated placement.\r\n            if (options.animate && !isInit) {\r\n                addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);\r\n            }\r\n\r\n            // First pass, without lookAhead but with lookBackward. Values are set from left to right.\r\n            scope_HandleNumbers.forEach(function(handleNumber) {\r\n                setHandle(handleNumber, resolveToValue(values[handleNumber], handleNumber), true, false);\r\n            });\r\n\r\n            // Second pass. Now that all base values are set, apply constraints\r\n            scope_HandleNumbers.forEach(function(handleNumber) {\r\n                setHandle(handleNumber, scope_Locations[handleNumber], true, true);\r\n            });\r\n\r\n            setZindex();\r\n\r\n            scope_HandleNumbers.forEach(function(handleNumber) {\r\n                fireEvent(\"update\", handleNumber);\r\n\r\n                // Fire the event only for handles that received a new value, as per #579\r\n                if (values[handleNumber] !== null && fireSetEvent) {\r\n                    fireEvent(\"set\", handleNumber);\r\n                }\r\n            });\r\n        }\r\n\r\n        // Reset slider to initial values\r\n        function valueReset(fireSetEvent) {\r\n            valueSet(options.start, fireSetEvent);\r\n        }\r\n\r\n        // Set value for a single handle\r\n        function valueSetHandle(handleNumber, value, fireSetEvent) {\r\n            var values = [];\r\n\r\n            // Ensure numeric input\r\n            handleNumber = Number(handleNumber);\r\n\r\n            if (!(handleNumber >= 0 && handleNumber < scope_HandleNumbers.length)) {\r\n                throw new Error(\"noUiSlider (\" + VERSION + \"): invalid handle number, got: \" + handleNumber);\r\n            }\r\n\r\n            for (var i = 0; i < scope_HandleNumbers.length; i++) {\r\n                values[i] = null;\r\n            }\r\n\r\n            values[handleNumber] = value;\r\n\r\n            valueSet(values, fireSetEvent);\r\n        }\r\n\r\n        // Get the slider value.\r\n        function valueGet() {\r\n            var values = scope_Values.map(options.format.to);\r\n\r\n            // If only one handle is used, return a single value.\r\n            if (values.length === 1) {\r\n                return values[0];\r\n            }\r\n\r\n            return values;\r\n        }\r\n\r\n        // Removes classes from the root and empties it.\r\n        function destroy() {\r\n            for (var key in options.cssClasses) {\r\n                if (!options.cssClasses.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                removeClass(scope_Target, options.cssClasses[key]);\r\n            }\r\n\r\n            while (scope_Target.firstChild) {\r\n                scope_Target.removeChild(scope_Target.firstChild);\r\n            }\r\n\r\n            delete scope_Target.noUiSlider;\r\n        }\r\n\r\n        // Get the current step size for the slider.\r\n        function getCurrentStep() {\r\n            // Check all locations, map them to their stepping point.\r\n            // Get the step point, then find it in the input list.\r\n            return scope_Locations.map(function(location, index) {\r\n                var nearbySteps = scope_Spectrum.getNearbySteps(location);\r\n                var value = scope_Values[index];\r\n                var increment = nearbySteps.thisStep.step;\r\n                var decrement = null;\r\n\r\n                // If the next value in this step moves into the next step,\r\n                // the increment is the start of the next step - the current value\r\n                if (increment !== false) {\r\n                    if (value + increment > nearbySteps.stepAfter.startValue) {\r\n                        increment = nearbySteps.stepAfter.startValue - value;\r\n                    }\r\n                }\r\n\r\n                // If the value is beyond the starting point\r\n                if (value > nearbySteps.thisStep.startValue) {\r\n                    decrement = nearbySteps.thisStep.step;\r\n                } else if (nearbySteps.stepBefore.step === false) {\r\n                    decrement = false;\r\n                }\r\n\r\n                // If a handle is at the start of a step, it always steps back into the previous step first\r\n                else {\r\n                    decrement = value - nearbySteps.stepBefore.highestStep;\r\n                }\r\n\r\n                // Now, if at the slider edges, there is not in/decrement\r\n                if (location === 100) {\r\n                    increment = null;\r\n                } else if (location === 0) {\r\n                    decrement = null;\r\n                }\r\n\r\n                // As per #391, the comparison for the decrement step can have some rounding issues.\r\n                var stepDecimals = scope_Spectrum.countStepDecimals();\r\n\r\n                // Round per #391\r\n                if (increment !== null && increment !== false) {\r\n                    increment = Number(increment.toFixed(stepDecimals));\r\n                }\r\n\r\n                if (decrement !== null && decrement !== false) {\r\n                    decrement = Number(decrement.toFixed(stepDecimals));\r\n                }\r\n\r\n                return [decrement, increment];\r\n            });\r\n        }\r\n\r\n        // Updateable: margin, limit, padding, step, range, animate, snap\r\n        function updateOptions(optionsToUpdate, fireSetEvent) {\r\n            // Spectrum is created using the range, snap, direction and step options.\r\n            // 'snap' and 'step' can be updated.\r\n            // If 'snap' and 'step' are not passed, they should remain unchanged.\r\n            var v = valueGet();\r\n\r\n            var updateAble = [\"margin\", \"limit\", \"padding\", \"range\", \"animate\", \"snap\", \"step\", \"format\"];\r\n\r\n            // Only change options that we're actually passed to update.\r\n            updateAble.forEach(function(name) {\r\n                if (optionsToUpdate[name] !== undefined) {\r\n                    originalOptions[name] = optionsToUpdate[name];\r\n                }\r\n            });\r\n\r\n            var newOptions = testOptions(originalOptions);\r\n\r\n            // Load new options into the slider state\r\n            updateAble.forEach(function(name) {\r\n                if (optionsToUpdate[name] !== undefined) {\r\n                    options[name] = newOptions[name];\r\n                }\r\n            });\r\n\r\n            scope_Spectrum = newOptions.spectrum;\r\n\r\n            // Limit, margin and padding depend on the spectrum but are stored outside of it. (#677)\r\n            options.margin = newOptions.margin;\r\n            options.limit = newOptions.limit;\r\n            options.padding = newOptions.padding;\r\n\r\n            // Update pips, removes existing.\r\n            if (options.pips) {\r\n                pips(options.pips);\r\n            }\r\n\r\n            // Invalidate the current positioning so valueSet forces an update.\r\n            scope_Locations = [];\r\n            valueSet(optionsToUpdate.start || v, fireSetEvent);\r\n        }\r\n\r\n        // Create the base element, initialize HTML and set classes.\r\n        // Add handles and connect elements.\r\n        scope_Base = addSlider(scope_Target);\r\n        addElements(options.connect, scope_Base);\r\n\r\n        // Attach user events.\r\n        bindSliderEvents(options.events);\r\n\r\n        // Use the public value method to set the start values.\r\n        valueSet(options.start);\r\n\r\n        // noinspection JSUnusedGlobalSymbols\r\n        scope_Self = {\r\n            destroy: destroy,\r\n            steps: getCurrentStep,\r\n            on: bindEvent,\r\n            off: removeEvent,\r\n            get: valueGet,\r\n            set: valueSet,\r\n            setHandle: valueSetHandle,\r\n            reset: valueReset,\r\n            // Exposed for unit testing, don't use this in your application.\r\n            __moveHandles: function(a, b, c) {\r\n                moveHandles(a, b, scope_Locations, c);\r\n            },\r\n            options: originalOptions, // Issue #600, #678\r\n            updateOptions: updateOptions,\r\n            target: scope_Target, // Issue #597\r\n            removePips: removePips,\r\n            pips: pips // Issue #594\r\n        };\r\n\r\n        if (options.pips) {\r\n            pips(options.pips);\r\n        }\r\n\r\n        if (options.tooltips) {\r\n            tooltips();\r\n        }\r\n\r\n        aria();\r\n\r\n        return scope_Self;\r\n    }\r\n\r\n    // Run the standard initializer\r\n    function initialize(target, originalOptions) {\r\n        if (!target || !target.nodeName) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): create requires a single element, got: \" + target);\r\n        }\r\n\r\n        // Throw an error if the slider was already initialized.\r\n        if (target.noUiSlider) {\r\n            throw new Error(\"noUiSlider (\" + VERSION + \"): Slider was already initialized.\");\r\n        }\r\n\r\n        // Test the options and create the slider environment;\r\n        var options = testOptions(originalOptions, target);\r\n        var api = scope(target, options, originalOptions);\r\n\r\n        target.noUiSlider = api;\r\n\r\n        return api;\r\n    }\r\n\r\n    // Use an object instead of a function for future expandability;\r\n    return {\r\n        // Exposed for unit testing, don't use this in your application.\r\n        __spectrum: Spectrum,\r\n        version: VERSION,\r\n        create: initialize\r\n    };\r\n});\r\n\n\n//# sourceURL=webpack:///./node_modules/nouislider/distribute/nouislider.js?");

/***/ }),

/***/ "./node_modules/randomcolor/randomColor.js":
/*!*************************************************!*\
  !*** ./node_modules/randomcolor/randomColor.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support AMD\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n  // Support CommonJS\n  } else { var randomColor; }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue (options) {\n\n    var hueRange = getHueRange(options.hue),\n        hue = randomWithin(hueRange);\n\n    // Instead of storing red as two seperate ranges,\n    // we group them, using negative numbers\n    if (hue < 0) {hue = 360 + hue;}\n\n    return hue;\n\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + Math.random() + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        return 'rgba(' + rgbColor.join(', ') + ', ' + Math.random() + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      return Math.floor(range[0] + Math.random()*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [19,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [47,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [63,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [179, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [258, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [283, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  return randomColor;\n}));\n\n\n//# sourceURL=webpack:///./node_modules/randomcolor/randomColor.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ "./node_modules/wnumb/wNumb.js":
/*!*************************************!*\
  !*** ./node_modules/wnumb/wNumb.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (factory) {\r\n\r\n    if ( true ) {\r\n\r\n        // AMD. Register as an anonymous module.\r\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n    } else {}\r\n\r\n}(function(){\r\n\r\n\t'use strict';\r\n\r\nvar FormatOptions = [\r\n\t'decimals',\r\n\t'thousand',\r\n\t'mark',\r\n\t'prefix',\r\n\t'suffix',\r\n\t'encoder',\r\n\t'decoder',\r\n\t'negativeBefore',\r\n\t'negative',\r\n\t'edit',\r\n\t'undo'\r\n];\r\n\r\n// General\r\n\r\n\t// Reverse a string\r\n\tfunction strReverse ( a ) {\r\n\t\treturn a.split('').reverse().join('');\r\n\t}\r\n\r\n\t// Check if a string starts with a specified prefix.\r\n\tfunction strStartsWith ( input, match ) {\r\n\t\treturn input.substring(0, match.length) === match;\r\n\t}\r\n\r\n\t// Check is a string ends in a specified suffix.\r\n\tfunction strEndsWith ( input, match ) {\r\n\t\treturn input.slice(-1 * match.length) === match;\r\n\t}\r\n\r\n\t// Throw an error if formatting options are incompatible.\r\n\tfunction throwEqualError( F, a, b ) {\r\n\t\tif ( (F[a] || F[b]) && (F[a] === F[b]) ) {\r\n\t\t\tthrow new Error(a);\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if a number is finite and not NaN\r\n\tfunction isValidNumber ( input ) {\r\n\t\treturn typeof input === 'number' && isFinite( input );\r\n\t}\r\n\r\n\t// Provide rounding-accurate toFixed method.\r\n\t// Borrowed: http://stackoverflow.com/a/21323330/775265\r\n\tfunction toFixed ( value, exp ) {\r\n\t\tvalue = value.toString().split('e');\r\n\t\tvalue = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp)));\r\n\t\tvalue = value.toString().split('e');\r\n\t\treturn (+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp))).toFixed(exp);\r\n\t}\r\n\r\n\r\n// Formatting\r\n\r\n\t// Accept a number as input, output formatted string.\r\n\tfunction formatTo ( decimals, thousand, mark, prefix, suffix, encoder, decoder, negativeBefore, negative, edit, undo, input ) {\r\n\r\n\t\tvar originalInput = input, inputIsNegative, inputPieces, inputBase, inputDecimals = '', output = '';\r\n\r\n\t\t// Apply user encoder to the input.\r\n\t\t// Expected outcome: number.\r\n\t\tif ( encoder ) {\r\n\t\t\tinput = encoder(input);\r\n\t\t}\r\n\r\n\t\t// Stop if no valid number was provided, the number is infinite or NaN.\r\n\t\tif ( !isValidNumber(input) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Rounding away decimals might cause a value of -0\r\n\t\t// when using very small ranges. Remove those cases.\r\n\t\tif ( decimals !== false && parseFloat(input.toFixed(decimals)) === 0 ) {\r\n\t\t\tinput = 0;\r\n\t\t}\r\n\r\n\t\t// Formatting is done on absolute numbers,\r\n\t\t// decorated by an optional negative symbol.\r\n\t\tif ( input < 0 ) {\r\n\t\t\tinputIsNegative = true;\r\n\t\t\tinput = Math.abs(input);\r\n\t\t}\r\n\r\n\t\t// Reduce the number of decimals to the specified option.\r\n\t\tif ( decimals !== false ) {\r\n\t\t\tinput = toFixed( input, decimals );\r\n\t\t}\r\n\r\n\t\t// Transform the number into a string, so it can be split.\r\n\t\tinput = input.toString();\r\n\r\n\t\t// Break the number on the decimal separator.\r\n\t\tif ( input.indexOf('.') !== -1 ) {\r\n\t\t\tinputPieces = input.split('.');\r\n\r\n\t\t\tinputBase = inputPieces[0];\r\n\r\n\t\t\tif ( mark ) {\r\n\t\t\t\tinputDecimals = mark + inputPieces[1];\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t// If it isn't split, the entire number will do.\r\n\t\t\tinputBase = input;\r\n\t\t}\r\n\r\n\t\t// Group numbers in sets of three.\r\n\t\tif ( thousand ) {\r\n\t\t\tinputBase = strReverse(inputBase).match(/.{1,3}/g);\r\n\t\t\tinputBase = strReverse(inputBase.join( strReverse( thousand ) ));\r\n\t\t}\r\n\r\n\t\t// If the number is negative, prefix with negation symbol.\r\n\t\tif ( inputIsNegative && negativeBefore ) {\r\n\t\t\toutput += negativeBefore;\r\n\t\t}\r\n\r\n\t\t// Prefix the number\r\n\t\tif ( prefix ) {\r\n\t\t\toutput += prefix;\r\n\t\t}\r\n\r\n\t\t// Normal negative option comes after the prefix. Defaults to '-'.\r\n\t\tif ( inputIsNegative && negative ) {\r\n\t\t\toutput += negative;\r\n\t\t}\r\n\r\n\t\t// Append the actual number.\r\n\t\toutput += inputBase;\r\n\t\toutput += inputDecimals;\r\n\r\n\t\t// Apply the suffix.\r\n\t\tif ( suffix ) {\r\n\t\t\toutput += suffix;\r\n\t\t}\r\n\r\n\t\t// Run the output through a user-specified post-formatter.\r\n\t\tif ( edit ) {\r\n\t\t\toutput = edit ( output, originalInput );\r\n\t\t}\r\n\r\n\t\t// All done.\r\n\t\treturn output;\r\n\t}\r\n\r\n\t// Accept a sting as input, output decoded number.\r\n\tfunction formatFrom ( decimals, thousand, mark, prefix, suffix, encoder, decoder, negativeBefore, negative, edit, undo, input ) {\r\n\r\n\t\tvar originalInput = input, inputIsNegative, output = '';\r\n\r\n\t\t// User defined pre-decoder. Result must be a non empty string.\r\n\t\tif ( undo ) {\r\n\t\t\tinput = undo(input);\r\n\t\t}\r\n\r\n\t\t// Test the input. Can't be empty.\r\n\t\tif ( !input || typeof input !== 'string' ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If the string starts with the negativeBefore value: remove it.\r\n\t\t// Remember is was there, the number is negative.\r\n\t\tif ( negativeBefore && strStartsWith(input, negativeBefore) ) {\r\n\t\t\tinput = input.replace(negativeBefore, '');\r\n\t\t\tinputIsNegative = true;\r\n\t\t}\r\n\r\n\t\t// Repeat the same procedure for the prefix.\r\n\t\tif ( prefix && strStartsWith(input, prefix) ) {\r\n\t\t\tinput = input.replace(prefix, '');\r\n\t\t}\r\n\r\n\t\t// And again for negative.\r\n\t\tif ( negative && strStartsWith(input, negative) ) {\r\n\t\t\tinput = input.replace(negative, '');\r\n\t\t\tinputIsNegative = true;\r\n\t\t}\r\n\r\n\t\t// Remove the suffix.\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice\r\n\t\tif ( suffix && strEndsWith(input, suffix) ) {\r\n\t\t\tinput = input.slice(0, -1 * suffix.length);\r\n\t\t}\r\n\r\n\t\t// Remove the thousand grouping.\r\n\t\tif ( thousand ) {\r\n\t\t\tinput = input.split(thousand).join('');\r\n\t\t}\r\n\r\n\t\t// Set the decimal separator back to period.\r\n\t\tif ( mark ) {\r\n\t\t\tinput = input.replace(mark, '.');\r\n\t\t}\r\n\r\n\t\t// Prepend the negative symbol.\r\n\t\tif ( inputIsNegative ) {\r\n\t\t\toutput += '-';\r\n\t\t}\r\n\r\n\t\t// Add the number\r\n\t\toutput += input;\r\n\r\n\t\t// Trim all non-numeric characters (allow '.' and '-');\r\n\t\toutput = output.replace(/[^0-9\\.\\-.]/g, '');\r\n\r\n\t\t// The value contains no parse-able number.\r\n\t\tif ( output === '' ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Covert to number.\r\n\t\toutput = Number(output);\r\n\r\n\t\t// Run the user-specified post-decoder.\r\n\t\tif ( decoder ) {\r\n\t\t\toutput = decoder(output);\r\n\t\t}\r\n\r\n\t\t// Check is the output is valid, otherwise: return false.\r\n\t\tif ( !isValidNumber(output) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n// Framework\r\n\r\n\t// Validate formatting options\r\n\tfunction validate ( inputOptions ) {\r\n\r\n\t\tvar i, optionName, optionValue,\r\n\t\t\tfilteredOptions = {};\r\n\r\n\t\tif ( inputOptions['suffix'] === undefined ) {\r\n\t\t\tinputOptions['suffix'] = inputOptions['postfix'];\r\n\t\t}\r\n\r\n\t\tfor ( i = 0; i < FormatOptions.length; i+=1 ) {\r\n\r\n\t\t\toptionName = FormatOptions[i];\r\n\t\t\toptionValue = inputOptions[optionName];\r\n\r\n\t\t\tif ( optionValue === undefined ) {\r\n\r\n\t\t\t\t// Only default if negativeBefore isn't set.\r\n\t\t\t\tif ( optionName === 'negative' && !filteredOptions.negativeBefore ) {\r\n\t\t\t\t\tfilteredOptions[optionName] = '-';\r\n\t\t\t\t// Don't set a default for mark when 'thousand' is set.\r\n\t\t\t\t} else if ( optionName === 'mark' && filteredOptions.thousand !== '.' ) {\r\n\t\t\t\t\tfilteredOptions[optionName] = '.';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfilteredOptions[optionName] = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t// Floating points in JS are stable up to 7 decimals.\r\n\t\t\t} else if ( optionName === 'decimals' ) {\r\n\t\t\t\tif ( optionValue >= 0 && optionValue < 8 ) {\r\n\t\t\t\t\tfilteredOptions[optionName] = optionValue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(optionName);\r\n\t\t\t\t}\r\n\r\n\t\t\t// These options, when provided, must be functions.\r\n\t\t\t} else if ( optionName === 'encoder' || optionName === 'decoder' || optionName === 'edit' || optionName === 'undo' ) {\r\n\t\t\t\tif ( typeof optionValue === 'function' ) {\r\n\t\t\t\t\tfilteredOptions[optionName] = optionValue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(optionName);\r\n\t\t\t\t}\r\n\r\n\t\t\t// Other options are strings.\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( typeof optionValue === 'string' ) {\r\n\t\t\t\t\tfilteredOptions[optionName] = optionValue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(optionName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Some values can't be extracted from a\r\n\t\t// string if certain combinations are present.\r\n\t\tthrowEqualError(filteredOptions, 'mark', 'thousand');\r\n\t\tthrowEqualError(filteredOptions, 'prefix', 'negative');\r\n\t\tthrowEqualError(filteredOptions, 'prefix', 'negativeBefore');\r\n\r\n\t\treturn filteredOptions;\r\n\t}\r\n\r\n\t// Pass all options as function arguments\r\n\tfunction passAll ( options, method, input ) {\r\n\t\tvar i, args = [];\r\n\r\n\t\t// Add all options in order of FormatOptions\r\n\t\tfor ( i = 0; i < FormatOptions.length; i+=1 ) {\r\n\t\t\targs.push(options[FormatOptions[i]]);\r\n\t\t}\r\n\r\n\t\t// Append the input, then call the method, presenting all\r\n\t\t// options as arguments.\r\n\t\targs.push(input);\r\n\t\treturn method.apply('', args);\r\n\t}\r\n\r\n\tfunction wNumb ( options ) {\r\n\r\n\t\tif ( !(this instanceof wNumb) ) {\r\n\t\t\treturn new wNumb ( options );\r\n\t\t}\r\n\r\n\t\tif ( typeof options !== \"object\" ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\toptions = validate(options);\r\n\r\n\t\t// Call 'formatTo' with proper arguments.\r\n\t\tthis.to = function ( input ) {\r\n\t\t\treturn passAll(options, formatTo, input);\r\n\t\t};\r\n\r\n\t\t// Call 'formatFrom' with proper arguments.\r\n\t\tthis.from = function ( input ) {\r\n\t\t\treturn passAll(options, formatFrom, input);\r\n\t\t};\r\n\t}\r\n\r\n\treturn wNumb;\r\n\r\n}));\r\n\n\n//# sourceURL=webpack:///./node_modules/wnumb/wNumb.js?");

/***/ })

/******/ });